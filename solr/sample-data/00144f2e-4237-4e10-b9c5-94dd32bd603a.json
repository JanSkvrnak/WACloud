{"url": "https://automateit.org/documentation/classes/AutomateIt/ShellManager.html", "mime-type": "text/html", "response-code": "200", "rec-headers": {"reader-identifier": "hdfs://un532p03-kky.fav:9000/Test-2019-06-30-cc-naki-crawler00-20190701123430248-00036-12296~crawler00.webarchiv.cz~7778.warc.gz", "WARC-Payload-Digest": "sha1:ILROIZHOIRDXLTMZRUVDI3G3CUTSLO34", "WARC-IP-Address": "185.199.109.153", "absolute-offset": "396107343", "WARC-Target-URI": "https://automateit.org/documentation/classes/AutomateIt/ShellManager.html", "WARC-Date": "2019-07-01T12:35:32Z", "Content-Length": "52540", "WARC-Record-ID": "<urn:uuid:00144f2e-4237-4e10-b9c5-94dd32bd603a>", "WARC-Type": "response", "Content-Type": "application/http; msgtype=response"}, "content": "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iaXNvLTg4NTktMSI/Pgo8IURPQ1RZUEUgaHRtbCAKICAgICBQVUJMSUMgIi0vL1czQy8vRFREIFhIVE1MIDEuMCBUcmFuc2l0aW9uYWwvL0VOIgogICAgICJodHRwOi8vd3d3LnczLm9yZy9UUi94aHRtbDEvRFREL3hodG1sMS10cmFuc2l0aW9uYWwuZHRkIj4KCjxodG1sIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sIiB4bWw6bGFuZz0iZW4iIGxhbmc9ImVuIj4KPGhlYWQ+CiAgPHRpdGxlPkNsYXNzOiBBdXRvbWF0ZUl0OjpTaGVsbE1hbmFnZXI8L3RpdGxlPgogIDxtZXRhIGh0dHAtZXF1aXY9IkNvbnRlbnQtVHlwZSIgY29udGVudD0idGV4dC9odG1sOyBjaGFyc2V0PWlzby04ODU5LTEiIC8+CiAgPG1ldGEgaHR0cC1lcXVpdj0iQ29udGVudC1TY3JpcHQtVHlwZSIgY29udGVudD0idGV4dC9qYXZhc2NyaXB0IiAvPgogIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iLi4vLi4vLi9yZG9jLXN0eWxlLmNzcyIgdHlwZT0idGV4dC9jc3MiIG1lZGlhPSJzY3JlZW4iIC8+CiAgPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogIC8vIDwhW0NEQVRBWwoKICBmdW5jdGlvbiBwb3B1cENvZGUoIHVybCApIHsKICAgIHdpbmRvdy5vcGVuKHVybCwgIkNvZGUiLCAicmVzaXphYmxlPXllcyxzY3JvbGxiYXJzPXllcyx0b29sYmFyPW5vLHN0YXR1cz1ubyxoZWlnaHQ9MTUwLHdpZHRoPTQwMCIpCiAgfQoKICBmdW5jdGlvbiB0b2dnbGVDb2RlKCBpZCApIHsKICAgIGlmICggZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQgKQogICAgICBlbGVtID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoIGlkICk7CiAgICBlbHNlIGlmICggZG9jdW1lbnQuYWxsICkKICAgICAgZWxlbSA9IGV2YWwoICJkb2N1bWVudC5hbGwuIiArIGlkICk7CiAgICBlbHNlCiAgICAgIHJldHVybiBmYWxzZTsKCiAgICBlbGVtU3R5bGUgPSBlbGVtLnN0eWxlOwogICAgCiAgICBpZiAoIGVsZW1TdHlsZS5kaXNwbGF5ICE9ICJibG9jayIgKSB7CiAgICAgIGVsZW1TdHlsZS5kaXNwbGF5ID0gImJsb2NrIgogICAgfSBlbHNlIHsKICAgICAgZWxlbVN0eWxlLmRpc3BsYXkgPSAibm9uZSIKICAgIH0KCiAgICByZXR1cm4gdHJ1ZTsKICB9CiAgCiAgLy8gTWFrZSBjb2RlYmxvY2tzIGhpZGRlbiBieSBkZWZhdWx0CiAgZG9jdW1lbnQud3JpdGVsbiggIjxzdHlsZSB0eXBlPVwidGV4dC9jc3NcIj5kaXYubWV0aG9kLXNvdXJjZS1jb2RlIHsgZGlzcGxheTogbm9uZSB9PC9zdHlsZT4iICkKICAKICAvLyBdXT4KICA8L3NjcmlwdD4KCjwvaGVhZD4KPGJvZHk+CgoKCiAgICA8ZGl2IGlkPSJjbGFzc0hlYWRlciI+CiAgICAgICAgPHRhYmxlIGNsYXNzPSJoZWFkZXItdGFibGUiPgogICAgICAgIDx0ciBjbGFzcz0idG9wLWFsaWduZWQtcm93Ij4KICAgICAgICAgIDx0ZD48c3Ryb25nPkNsYXNzPC9zdHJvbmc+PC90ZD4KICAgICAgICAgIDx0ZCBjbGFzcz0iY2xhc3MtbmFtZS1pbi1oZWFkZXIiPkF1dG9tYXRlSXQ6OlNoZWxsTWFuYWdlcjwvdGQ+CiAgICAgICAgPC90cj4KICAgICAgICA8dHIgY2xhc3M9InRvcC1hbGlnbmVkLXJvdyI+CiAgICAgICAgICAgIDx0ZD48c3Ryb25nPkluOjwvc3Ryb25nPjwvdGQ+CiAgICAgICAgICAgIDx0ZD4KICAgICAgICAgICAgICAgIDxhIGhyZWY9Ii4uLy4uL2ZpbGVzL2xpYi9hdXRvbWF0ZWl0L3NoZWxsX21hbmFnZXJfcmIuaHRtbCI+CiAgICAgICAgICAgICAgICBsaWIvYXV0b21hdGVpdC9zaGVsbF9tYW5hZ2VyLnJiCiAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgPGJyIC8+CiAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgPC90cj4KCiAgICAgICAgPHRyIGNsYXNzPSJ0b3AtYWxpZ25lZC1yb3ciPgogICAgICAgICAgICA8dGQ+PHN0cm9uZz5QYXJlbnQ6PC9zdHJvbmc+PC90ZD4KICAgICAgICAgICAgPHRkPgogICAgICAgICAgICAgICAgPGEgaHJlZj0iUGx1Z2luL01hbmFnZXIuaHRtbCI+CiAgICAgICAgICAgICAgICBBdXRvbWF0ZUl0OjpQbHVnaW46Ok1hbmFnZXIKICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICA8L3RkPgogICAgICAgIDwvdHI+CiAgICAgICAgPC90YWJsZT4KICAgIDwvZGl2PgogIDwhLS0gYmFubmVyIGhlYWRlciAtLT4KCiAgPGRpdiBpZD0iYm9keUNvbnRlbnQiPgoKCgogIDxkaXYgaWQ9ImNvbnRleHRDb250ZW50Ij4KCiAgICA8ZGl2IGlkPSJkZXNjcmlwdGlvbiI+CiAgICAgIDxoMj48YSBocmVmPSJTaGVsbE1hbmFnZXIuaHRtbCI+U2hlbGxNYW5hZ2VyPC9hPjwvaDI+CjxwPgpUaGUgPGEgaHJlZj0iU2hlbGxNYW5hZ2VyLmh0bWwiPlNoZWxsTWFuYWdlcjwvYT4gcHJvdmlkZXMgVW5peC1saWtlIHNoZWxsCmNvbW1hbmRzIGZvciBtYW5pcHVsYXRpbmcgZmlsZXMgYW5kIGV4ZWN1dGluZyBjb21tYW5kcy4KPC9wPgo8cD4KPGI+V0FSTklORzwvYj46IFByZXZpZXdpbmcgY29kZSBjYW4gYmUgZGFuZ2Vyb3VzLiBSZWFkIDxhCmhyZWY9Ii4uLy4uL2ZpbGVzL2RvY3MvcHJldmlld3NfdHh0Lmh0bWwiPnByZXZpZXdzLnR4dDwvYT4gZm9yIGluc3RydWN0aW9ucwpvbiBob3cgdG8gd3JpdGUgY29kZSB0aGF0IGNhbiBiZSBzYWZlbHkgcHJldmlld2VkLgo8L3A+CgogICAgPC9kaXY+CgoKICAgPC9kaXY+CgogICAgPGRpdiBpZD0ibWV0aG9kLWxpc3QiPgogICAgICA8aDMgY2xhc3M9InNlY3Rpb24tYmFyIj5NZXRob2RzPC9oMz4KCiAgICAgIDxkaXYgY2xhc3M9Im5hbWUtbGlzdCI+CiAgICAgIDxhIGhyZWY9IiNNMDAwMzI5Ij5iYWNrdXA8L2E+Jm5ic3A7Jm5ic3A7CiAgICAgIDxhIGhyZWY9IiNNMDAwMzM4Ij5jZDwvYT4mbmJzcDsmbmJzcDsKICAgICAgPGEgaHJlZj0iI00wMDAzNTQiPmNobW9kPC9hPiZuYnNwOyZuYnNwOwogICAgICA8YSBocmVmPSIjTTAwMDM1NSI+Y2htb2RfUjwvYT4mbmJzcDsmbmJzcDsKICAgICAgPGEgaHJlZj0iI00wMDAzNTYiPmNob3duPC9hPiZuYnNwOyZuYnNwOwogICAgICA8YSBocmVmPSIjTTAwMDM1NyI+Y2hvd25fUjwvYT4mbmJzcDsmbmJzcDsKICAgICAgPGEgaHJlZj0iI00wMDAzMzYiPmNocGVybTwvYT4mbmJzcDsmbmJzcDsKICAgICAgPGEgaHJlZj0iI00wMDAzNDYiPmNwPC9hPiZuYnNwOyZuYnNwOwogICAgICA8YSBocmVmPSIjTTAwMDM0OCI+Y3BfUjwvYT4mbmJzcDsmbmJzcDsKICAgICAgPGEgaHJlZj0iI00wMDAzNDciPmNwX3I8L2E+Jm5ic3A7Jm5ic3A7CiAgICAgIDxhIGhyZWY9IiNNMDAwMzUzIj5pbnN0YWxsPC9hPiZuYnNwOyZuYnNwOwogICAgICA8YSBocmVmPSIjTTAwMDM0MyI+bG48L2E+Jm5ic3A7Jm5ic3A7CiAgICAgIDxhIGhyZWY9IiNNMDAwMzQ0Ij5sbl9zPC9hPiZuYnNwOyZuYnNwOwogICAgICA8YSBocmVmPSIjTTAwMDM0NSI+bG5fc2Y8L2E+Jm5ic3A7Jm5ic3A7CiAgICAgIDxhIGhyZWY9IiNNMDAwMzQwIj5ta2RpcjwvYT4mbmJzcDsmbmJzcDsKICAgICAgPGEgaHJlZj0iI00wMDAzNDEiPm1rZGlyX3A8L2E+Jm5ic3A7Jm5ic3A7CiAgICAgIDxhIGhyZWY9IiNNMDAwMzMzIj5ta3RlbXA8L2E+Jm5ic3A7Jm5ic3A7CiAgICAgIDxhIGhyZWY9IiNNMDAwMzM0Ij5ta3RlbXBkaXI8L2E+Jm5ic3A7Jm5ic3A7CiAgICAgIDxhIGhyZWY9IiNNMDAwMzM1Ij5ta3RlbXBkaXJjZDwvYT4mbmJzcDsmbmJzcDsKICAgICAgPGEgaHJlZj0iI00wMDAzNDkiPm12PC9hPiZuYnNwOyZuYnNwOwogICAgICA8YSBocmVmPSIjTTAwMDMyOCI+cHJvdmlkZXNfbGluaz88L2E+Jm5ic3A7Jm5ic3A7CiAgICAgIDxhIGhyZWY9IiNNMDAwMzI1Ij5wcm92aWRlc19tb2RlPzwvYT4mbmJzcDsmbmJzcDsKICAgICAgPGEgaHJlZj0iI00wMDAzMjYiPnByb3ZpZGVzX293bmVyc2hpcD88L2E+Jm5ic3A7Jm5ic3A7CiAgICAgIDxhIGhyZWY9IiNNMDAwMzI3Ij5wcm92aWRlc19zeW1saW5rPzwvYT4mbmJzcDsmbmJzcDsKICAgICAgPGEgaHJlZj0iI00wMDAzMzkiPnB3ZDwvYT4mbmJzcDsmbmJzcDsKICAgICAgPGEgaHJlZj0iI00wMDAzNTAiPnJtPC9hPiZuYnNwOyZuYnNwOwogICAgICA8YSBocmVmPSIjTTAwMDM1MSI+cm1fcjwvYT4mbmJzcDsmbmJzcDsKICAgICAgPGEgaHJlZj0iI00wMDAzNTIiPnJtX3JmPC9hPiZuYnNwOyZuYnNwOwogICAgICA8YSBocmVmPSIjTTAwMDM0MiI+cm1kaXI8L2E+Jm5ic3A7Jm5ic3A7CiAgICAgIDxhIGhyZWY9IiNNMDAwMzMwIj5zaDwvYT4mbmJzcDsmbmJzcDsKICAgICAgPGEgaHJlZj0iI00wMDAzNTgiPnRvdWNoPC9hPiZuYnNwOyZuYnNwOwogICAgICA8YSBocmVmPSIjTTAwMDMzNyI+dW1hc2s8L2E+Jm5ic3A7Jm5ic3A7CiAgICAgIDxhIGhyZWY9IiNNMDAwMzMxIj53aGljaDwvYT4mbmJzcDsmbmJzcDsKICAgICAgPGEgaHJlZj0iI00wMDAzMzIiPndoaWNoITwvYT4mbmJzcDsmbmJzcDsKICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KCiAgPC9kaXY+CgoKICAgIDwhLS0gaWYgaW5jbHVkZXMgLS0+CgogICAgPGRpdiBpZD0ic2VjdGlvbiI+CgoKCgoKICAgICAgCgoKICAgIDwhLS0gaWYgbWV0aG9kX2xpc3QgLS0+CiAgICA8ZGl2IGlkPSJtZXRob2RzIj4KICAgICAgPGgzIGNsYXNzPSJzZWN0aW9uLWJhciI+UHVibGljIEluc3RhbmNlIG1ldGhvZHM8L2gzPgoKICAgICAgPGRpdiBpZD0ibWV0aG9kLU0wMDAzMjkiIGNsYXNzPSJtZXRob2QtZGV0YWlsIj4KICAgICAgICA8YSBuYW1lPSJNMDAwMzI5Ij48L2E+CgogICAgICAgIDxkaXYgY2xhc3M9Im1ldGhvZC1oZWFkaW5nIj4KICAgICAgICAgIDxhIGhyZWY9IiNNMDAwMzI5IiBjbGFzcz0ibWV0aG9kLXNpZ25hdHVyZSI+CiAgICAgICAgICA8c3BhbiBjbGFzcz0ibWV0aG9kLW5hbWUiPmJhY2t1cDwvc3Bhbj48c3BhbiBjbGFzcz0ibWV0aG9kLWFyZ3MiPigqc291cmNlcyk8L3NwYW4+CiAgICAgICAgICA8L2E+CiAgICAgICAgPC9kaXY+CiAgICAgIAogICAgICAgIDxkaXYgY2xhc3M9Im1ldGhvZC1kZXNjcmlwdGlvbiI+CiAgICAgICAgICA8cD4KQmFja3VwIDx0dD5zb3VyY2VzPC90dD4gaWYgdGhleSBleGlzdC4gUmV0dXJucyB0aGUgbmFtZXMgb2YgdGhlIGJhY2t1cHMKY3JlYXRlZC4KPC9wPgo8cD4KT3B0aW9uczoKPC9wPgo8dWw+CjxsaT46cXVpZXQgJiM4MjEyOyBEb24mIzgyMTY7dCBkaXNwbGF5IG91dHB1dD8gRGVmYXVsdCBpcyBmYWxzZS4KCjwvbGk+CjwvdWw+CjxwPgpUaGVzZSBiYWNrdXBzIGFyZSBjb3BpZXMgb2YgdGhlIG9yaWdpbmFsIHNvdXJjZXMgc2F2ZWQgaW50byB0aGUgc2FtZQpkaXJlY3RvcmllcyBhcyB0aGUgb3JpZ2luYWxzLiBUaGUgcGF0aG5hbWVzIG9mIHRoZXNlIGNvcGllcyBhcmUgdGltZXN0YW1wZWQKYW5kIGd1YXJhbnRlZWQgdG8gYmUgdW5pcXVlLCBzbyB5b3UgY2FuIGhhdmUgbXVsdGlwbGUgYmFja3VwcyBvZiB0aGUgc2FtZQpzb3VyY2VzLgo8L3A+CjxwPgo8Yj5XQVJOSU5HPC9iPjogVGhpcyBtZXRob2QgaXMgbm90IGNvbmRpdGlvbmFsLiBJdCB3aWxsIG1ha2UgYSA8YQpocmVmPSJTaGVsbE1hbmFnZXIuaHRtbCNNMDAwMzI5Ij5iYWNrdXA8L2E+IGV2ZXJ5IHRpbWUgaXQmIzgyMTY7cyBjYWxsZWQgaWYKdGhlIHNvdXJjZXMgZXhpc3QuIFRoZXJlZm9yZSwgb25seSBleGVjdXRlIHRoaXMgbWV0aG9kIHdoZW4gaXRzIG5lZWRlZC4KPC9wPgo8cD4KRm9yIGV4YW1wbGUsIDxhIGhyZWY9IlNoZWxsTWFuYWdlci5odG1sI00wMDAzMjkiPmJhY2t1cDwvYT4gYSBmaWxlOgo8L3A+CjxwcmU+CiAgYmFja3VwKCZxdW90Oy90bXAvbXlmaWxlJnF1b3Q7KSAjID0mZ3Q7ICZxdW90Oy90bXAvbXlmaWxlLjExOTA5OTQyMzdfTTJ4aExyQzZTai5iYWsKPC9wcmU+CjxwPgpJbiB0aGUgYWJvdmUgZXhhbXBsZSwgdGhlIDxhCmhyZWY9IlNoZWxsTWFuYWdlci5odG1sI00wMDAzMjkiPmJhY2t1cDwvYT4mIzgyMTY7cyBuYW1lIGNvbnRhaW5zIHR3bwpzcGVjaWFsIHN0cmluZ3MuIFRoZSAmcXVvdDsxMTkwOTk0MjM3JnF1b3Q7IGlzIHRoZSB0aW1lIHRoZSA8YQpocmVmPSJTaGVsbE1hbmFnZXIuaHRtbCNNMDAwMzI5Ij5iYWNrdXA8L2E+IHdhcyBtYWRlIGluIHNlY29uZHMgc2luY2UgdGhlCkVwb2NoLiBUaGUgJnF1b3Q7TTJ4aExyQzZTaiZxdW90OyBpcyBhIHJhbmRvbSBzdHJpbmcgdXNlZCB0byBndWFyYW50ZWUgdGhlCnVuaXF1ZW5lc3Mgb2YgdGhpcyA8YSBocmVmPSJTaGVsbE1hbmFnZXIuaHRtbCNNMDAwMzI5Ij5iYWNrdXA8L2E+IGluIGNhc2UKdHdvIGFyZSBtYWRlIGF0IGV4YWN0bHkgdGhlIHNhbWUgdGltZS4KPC9wPgogICAgICAgICAgPHA+PGEgY2xhc3M9InNvdXJjZS10b2dnbGUiIGhyZWY9IiMiCiAgICAgICAgICAgIG9uY2xpY2s9InRvZ2dsZUNvZGUoJ00wMDAzMjktc291cmNlJyk7cmV0dXJuIGZhbHNlOyI+W1NvdXJjZV08L2E+PC9wPgogICAgICAgICAgPGRpdiBjbGFzcz0ibWV0aG9kLXNvdXJjZS1jb2RlIiBpZD0iTTAwMDMyOS1zb3VyY2UiPgo8cHJlPgo8c3BhbiBjbGFzcz0icnVieS1jb21tZW50IGNtdCI+IyBGaWxlIGxpYi9hdXRvbWF0ZWl0L3NoZWxsX21hbmFnZXIucmIsIGxpbmUgNTE8L3NwYW4+CiAgPHNwYW4gY2xhc3M9InJ1Ynkta2V5d29yZCBrdyI+ZGVmPC9zcGFuPiA8c3BhbiBjbGFzcz0icnVieS1pZGVudGlmaWVyIj5iYWNrdXA8L3NwYW4+KDxzcGFuIGNsYXNzPSJydWJ5LW9wZXJhdG9yIj4qPC9zcGFuPjxzcGFuIGNsYXNzPSJydWJ5LWlkZW50aWZpZXIiPnNvdXJjZXM8L3NwYW4+KSA8c3BhbiBjbGFzcz0icnVieS1pZGVudGlmaWVyIj5kaXNwYXRjaDwvc3Bhbj4oPHNwYW4gY2xhc3M9InJ1Ynktb3BlcmF0b3IiPio8L3NwYW4+PHNwYW4gY2xhc3M9InJ1YnktaWRlbnRpZmllciI+c291cmNlczwvc3Bhbj4pIDxzcGFuIGNsYXNzPSJydWJ5LWtleXdvcmQga3ciPmVuZDwvc3Bhbj4KPC9wcmU+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgICAgPC9kaXY+CgogICAgICA8ZGl2IGlkPSJtZXRob2QtTTAwMDMzOCIgY2xhc3M9Im1ldGhvZC1kZXRhaWwiPgogICAgICAgIDxhIG5hbWU9Ik0wMDAzMzgiPjwvYT4KCiAgICAgICAgPGRpdiBjbGFzcz0ibWV0aG9kLWhlYWRpbmciPgogICAgICAgICAgPGEgaHJlZj0iI00wMDAzMzgiIGNsYXNzPSJtZXRob2Qtc2lnbmF0dXJlIj4KICAgICAgICAgIDxzcGFuIGNsYXNzPSJtZXRob2QtbmFtZSI+Y2Q8L3NwYW4+PHNwYW4gY2xhc3M9Im1ldGhvZC1hcmdzIj4oZGlyLCBvcHRzPXt9LCAmYW1wO2Jsb2NrKTwvc3Bhbj4KICAgICAgICAgIDwvYT4KICAgICAgICA8L2Rpdj4KICAgICAgCiAgICAgICAgPGRpdiBjbGFzcz0ibWV0aG9kLWRlc2NyaXB0aW9uIj4KICAgICAgICAgIDxwPgpDaGFuZ2VzIHRoZSBkaXJlY3RvcnkgaW50byB0aGUgc3BlY2lmaWVkIDx0dD5kaXI8L3R0Pi4gSWYgY2FsbGVkIHdpdGggYQpibG9jaywgY2hhbmdlcyB0byB0aGUgZGlyZWN0b3J5IGZvciB0aGUgZHVyYXRpb24gb2YgdGhlIGJsb2NrLCBhbmQgdGhlbgpjaGFuZ2VzIGJhY2sgdG8gdGhlIHByZXZpb3VzIGRpcmVjdG9yeSBhdCB0aGUgZW5kLgo8L3A+CjxwPgo8Yj5XQVJOSU5HPC9iPjogUHJldmlld2luZyBjb2RlIGNhbiBiZSBkYW5nZXJvdXMuIFJlYWQgPGEKaHJlZj0iLi4vLi4vZmlsZXMvZG9jcy9wcmV2aWV3c190eHQuaHRtbCI+cHJldmlld3MudHh0PC9hPiBmb3IgaW5zdHJ1Y3Rpb25zCm9uIGhvdyB0byB3cml0ZSBjb2RlIHRoYXQgY2FuIGJlIHNhZmVseSBwcmV2aWV3ZWQuCjwvcD4KICAgICAgICAgIDxwPjxhIGNsYXNzPSJzb3VyY2UtdG9nZ2xlIiBocmVmPSIjIgogICAgICAgICAgICBvbmNsaWNrPSJ0b2dnbGVDb2RlKCdNMDAwMzM4LXNvdXJjZScpO3JldHVybiBmYWxzZTsiPltTb3VyY2VdPC9hPjwvcD4KICAgICAgICAgIDxkaXYgY2xhc3M9Im1ldGhvZC1zb3VyY2UtY29kZSIgaWQ9Ik0wMDAzMzgtc291cmNlIj4KPHByZT4KPHNwYW4gY2xhc3M9InJ1YnktY29tbWVudCBjbXQiPiMgRmlsZSBsaWIvYXV0b21hdGVpdC9zaGVsbF9tYW5hZ2VyLnJiLCBsaW5lIDE0Mzwvc3Bhbj4KICA8c3BhbiBjbGFzcz0icnVieS1rZXl3b3JkIGt3Ij5kZWY8L3NwYW4+IDxzcGFuIGNsYXNzPSJydWJ5LWlkZW50aWZpZXIiPmNkPC9zcGFuPig8c3BhbiBjbGFzcz0icnVieS1pZGVudGlmaWVyIj5kaXI8L3NwYW4+LCA8c3BhbiBjbGFzcz0icnVieS1pZGVudGlmaWVyIj5vcHRzPC9zcGFuPj17fSwgPHNwYW4gY2xhc3M9InJ1Ynktb3BlcmF0b3IiPiZhbXA7PC9zcGFuPjxzcGFuIGNsYXNzPSJydWJ5LWlkZW50aWZpZXIiPmJsb2NrPC9zcGFuPikgPHNwYW4gY2xhc3M9InJ1YnktaWRlbnRpZmllciI+ZGlzcGF0Y2g8L3NwYW4+KDxzcGFuIGNsYXNzPSJydWJ5LWlkZW50aWZpZXIiPmRpcjwvc3Bhbj4sIDxzcGFuIGNsYXNzPSJydWJ5LWlkZW50aWZpZXIiPm9wdHM8L3NwYW4+LCA8c3BhbiBjbGFzcz0icnVieS1vcGVyYXRvciI+JmFtcDs8L3NwYW4+PHNwYW4gY2xhc3M9InJ1YnktaWRlbnRpZmllciI+YmxvY2s8L3NwYW4+KSA8c3BhbiBjbGFzcz0icnVieS1rZXl3b3JkIGt3Ij5lbmQ8L3NwYW4+CjwvcHJlPgogICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICAgIDwvZGl2PgoKICAgICAgPGRpdiBpZD0ibWV0aG9kLU0wMDAzNTQiIGNsYXNzPSJtZXRob2QtZGV0YWlsIj4KICAgICAgICA8YSBuYW1lPSJNMDAwMzU0Ij48L2E+CgogICAgICAgIDxkaXYgY2xhc3M9Im1ldGhvZC1oZWFkaW5nIj4KICAgICAgICAgIDxhIGhyZWY9IiNNMDAwMzU0IiBjbGFzcz0ibWV0aG9kLXNpZ25hdHVyZSI+CiAgICAgICAgICA8c3BhbiBjbGFzcz0ibWV0aG9kLW5hbWUiPmNobW9kPC9zcGFuPjxzcGFuIGNsYXNzPSJtZXRob2QtYXJncyI+KG1vZGUsIHRhcmdldHMsIG9wdHM9e30pPC9zcGFuPgogICAgICAgICAgPC9hPgogICAgICAgIDwvZGl2PgogICAgICAKICAgICAgICA8ZGl2IGNsYXNzPSJtZXRob2QtZGVzY3JpcHRpb24iPgogICAgICAgICAgPHA+CkNoYW5nZSB0aGUgcGVybWlzc2lvbiA8dHQ+bW9kZTwvdHQ+IG9mIHRoZSA8dHQ+dGFyZ2V0czwvdHQ+LiBSZXR1cm5zIGFuCmFycmF5IG9mIHRhcmdldHMgbW9kaWZpZWQgb3IgPHR0PmZhbHNlPC90dD4gaWYgYWxsIGhhdmUgdGhlIGRlc2lyZWQgbW9kZS4KPC9wPgogICAgICAgICAgPHA+PGEgY2xhc3M9InNvdXJjZS10b2dnbGUiIGhyZWY9IiMiCiAgICAgICAgICAgIG9uY2xpY2s9InRvZ2dsZUNvZGUoJ00wMDAzNTQtc291cmNlJyk7cmV0dXJuIGZhbHNlOyI+W1NvdXJjZV08L2E+PC9wPgogICAgICAgICAgPGRpdiBjbGFzcz0ibWV0aG9kLXNvdXJjZS1jb2RlIiBpZD0iTTAwMDM1NC1zb3VyY2UiPgo8cHJlPgo8c3BhbiBjbGFzcz0icnVieS1jb21tZW50IGNtdCI+IyBGaWxlIGxpYi9hdXRvbWF0ZWl0L3NoZWxsX21hbmFnZXIucmIsIGxpbmUgMjM4PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJydWJ5LWtleXdvcmQga3ciPmRlZjwvc3Bhbj4gPHNwYW4gY2xhc3M9InJ1YnktaWRlbnRpZmllciI+Y2htb2Q8L3NwYW4+KDxzcGFuIGNsYXNzPSJydWJ5LWlkZW50aWZpZXIiPm1vZGU8L3NwYW4+LCA8c3BhbiBjbGFzcz0icnVieS1pZGVudGlmaWVyIj50YXJnZXRzPC9zcGFuPiwgPHNwYW4gY2xhc3M9InJ1YnktaWRlbnRpZmllciI+b3B0czwvc3Bhbj49e30pIDxzcGFuIGNsYXNzPSJydWJ5LWlkZW50aWZpZXIiPmRpc3BhdGNoPC9zcGFuPig8c3BhbiBjbGFzcz0icnVieS1pZGVudGlmaWVyIj5tb2RlPC9zcGFuPiwgPHNwYW4gY2xhc3M9InJ1YnktaWRlbnRpZmllciI+dGFyZ2V0czwvc3Bhbj4sIDxzcGFuIGNsYXNzPSJydWJ5LWlkZW50aWZpZXIiPm9wdHM8L3NwYW4+KSA8c3BhbiBjbGFzcz0icnVieS1rZXl3b3JkIGt3Ij5lbmQ8L3NwYW4+CjwvcHJlPgogICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICAgIDwvZGl2PgoKICAgICAgPGRpdiBpZD0ibWV0aG9kLU0wMDAzNTUiIGNsYXNzPSJtZXRob2QtZGV0YWlsIj4KICAgICAgICA8YSBuYW1lPSJNMDAwMzU1Ij48L2E+CgogICAgICAgIDxkaXYgY2xhc3M9Im1ldGhvZC1oZWFkaW5nIj4KICAgICAgICAgIDxhIGhyZWY9IiNNMDAwMzU1IiBjbGFzcz0ibWV0aG9kLXNpZ25hdHVyZSI+CiAgICAgICAgICA8c3BhbiBjbGFzcz0ibWV0aG9kLW5hbWUiPmNobW9kX1I8L3NwYW4+PHNwYW4gY2xhc3M9Im1ldGhvZC1hcmdzIj4obW9kZSwgdGFyZ2V0cywgb3B0cz17fSk8L3NwYW4+CiAgICAgICAgICA8L2E+CiAgICAgICAgPC9kaXY+CiAgICAgIAogICAgICAgIDxkaXYgY2xhc3M9Im1ldGhvZC1kZXNjcmlwdGlvbiI+CiAgICAgICAgICA8cD4KQ2hhbmdlIHRoZSBwZXJtaXNzaW9uIDx0dD5tb2RlPC90dD4gb2YgdGhlIDx0dD50YXJnZXRzPC90dD4gcmVjdXJzaXZlbHkuClJldHVybnMgYW4gYXJyYXkgb2YgdGFyZ2V0cyBtb2RpZmllZCBvciA8dHQ+ZmFsc2U8L3R0PiBpZiBhbGwgaGF2ZSB0aGUKZGVzaXJlZCBtb2RlLgo8L3A+CiAgICAgICAgICA8cD48YSBjbGFzcz0ic291cmNlLXRvZ2dsZSIgaHJlZj0iIyIKICAgICAgICAgICAgb25jbGljaz0idG9nZ2xlQ29kZSgnTTAwMDM1NS1zb3VyY2UnKTtyZXR1cm4gZmFsc2U7Ij5bU291cmNlXTwvYT48L3A+CiAgICAgICAgICA8ZGl2IGNsYXNzPSJtZXRob2Qtc291cmNlLWNvZGUiIGlkPSJNMDAwMzU1LXNvdXJjZSI+CjxwcmU+CjxzcGFuIGNsYXNzPSJydWJ5LWNvbW1lbnQgY210Ij4jIEZpbGUgbGliL2F1dG9tYXRlaXQvc2hlbGxfbWFuYWdlci5yYiwgbGluZSAyNDI8L3NwYW4+CiAgPHNwYW4gY2xhc3M9InJ1Ynkta2V5d29yZCBrdyI+ZGVmPC9zcGFuPiA8c3BhbiBjbGFzcz0icnVieS1pZGVudGlmaWVyIj5jaG1vZF9SPC9zcGFuPig8c3BhbiBjbGFzcz0icnVieS1pZGVudGlmaWVyIj5tb2RlPC9zcGFuPiwgPHNwYW4gY2xhc3M9InJ1YnktaWRlbnRpZmllciI+dGFyZ2V0czwvc3Bhbj4sIDxzcGFuIGNsYXNzPSJydWJ5LWlkZW50aWZpZXIiPm9wdHM8L3NwYW4+PXt9KSA8c3BhbiBjbGFzcz0icnVieS1pZGVudGlmaWVyIj5kaXNwYXRjaDwvc3Bhbj4oPHNwYW4gY2xhc3M9InJ1YnktaWRlbnRpZmllciI+bW9kZTwvc3Bhbj4sIDxzcGFuIGNsYXNzPSJydWJ5LWlkZW50aWZpZXIiPnRhcmdldHM8L3NwYW4+LCA8c3BhbiBjbGFzcz0icnVieS1pZGVudGlmaWVyIj5vcHRzPC9zcGFuPikgPHNwYW4gY2xhc3M9InJ1Ynkta2V5d29yZCBrdyI+ZW5kPC9zcGFuPgo8L3ByZT4KICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgICA8L2Rpdj4KCiAgICAgIDxkaXYgaWQ9Im1ldGhvZC1NMDAwMzU2IiBjbGFzcz0ibWV0aG9kLWRldGFpbCI+CiAgICAgICAgPGEgbmFtZT0iTTAwMDM1NiI+PC9hPgoKICAgICAgICA8ZGl2IGNsYXNzPSJtZXRob2QtaGVhZGluZyI+CiAgICAgICAgICA8YSBocmVmPSIjTTAwMDM1NiIgY2xhc3M9Im1ldGhvZC1zaWduYXR1cmUiPgogICAgICAgICAgPHNwYW4gY2xhc3M9Im1ldGhvZC1uYW1lIj5jaG93bjwvc3Bhbj48c3BhbiBjbGFzcz0ibWV0aG9kLWFyZ3MiPih1c2VyLCBncm91cCwgdGFyZ2V0cywgb3B0cz17fSk8L3NwYW4+CiAgICAgICAgICA8L2E+CiAgICAgICAgPC9kaXY+CiAgICAgIAogICAgICAgIDxkaXYgY2xhc3M9Im1ldGhvZC1kZXNjcmlwdGlvbiI+CiAgICAgICAgICA8cD4KQ2hhbmdlIHRoZSA8dHQ+dXNlcjwvdHQ+IGFuZCA8dHQ+Z3JvdXA8L3R0PiBvd25lcnNoaXAgb2YgdGhlCjx0dD50YXJnZXRzPC90dD4uIFlvdSBjYW4gbGVhdmUgZWl0aGVyIHRoZSB1c2VyIG9yIGdyb3VwIGFzIG5pbCBpZiB5b3UKZG9uJiM4MjE2O3Qgd2FudCB0byBjaGFuZ2UgaXQuIFJldHVybnMgYW4gYXJyYXkgb2YgdGFyZ2V0cyBtb2RpZmllZCBvcgo8dHQ+ZmFsc2U8L3R0PiBpZiBhbGwgaGF2ZSB0aGUgZGVzaXJlZCBvd25lcnNoaXAuCjwvcD4KICAgICAgICAgIDxwPjxhIGNsYXNzPSJzb3VyY2UtdG9nZ2xlIiBocmVmPSIjIgogICAgICAgICAgICBvbmNsaWNrPSJ0b2dnbGVDb2RlKCdNMDAwMzU2LXNvdXJjZScpO3JldHVybiBmYWxzZTsiPltTb3VyY2VdPC9hPjwvcD4KICAgICAgICAgIDxkaXYgY2xhc3M9Im1ldGhvZC1zb3VyY2UtY29kZSIgaWQ9Ik0wMDAzNTYtc291cmNlIj4KPHByZT4KPHNwYW4gY2xhc3M9InJ1YnktY29tbWVudCBjbXQiPiMgRmlsZSBsaWIvYXV0b21hdGVpdC9zaGVsbF9tYW5hZ2VyLnJiLCBsaW5lIDI0ODwvc3Bhbj4KICA8c3BhbiBjbGFzcz0icnVieS1rZXl3b3JkIGt3Ij5kZWY8L3NwYW4+IDxzcGFuIGNsYXNzPSJydWJ5LWlkZW50aWZpZXIiPmNob3duPC9zcGFuPig8c3BhbiBjbGFzcz0icnVieS1pZGVudGlmaWVyIj51c2VyPC9zcGFuPiwgPHNwYW4gY2xhc3M9InJ1YnktaWRlbnRpZmllciI+Z3JvdXA8L3NwYW4+LCA8c3BhbiBjbGFzcz0icnVieS1pZGVudGlmaWVyIj50YXJnZXRzPC9zcGFuPiwgPHNwYW4gY2xhc3M9InJ1YnktaWRlbnRpZmllciI+b3B0czwvc3Bhbj49e30pIDxzcGFuIGNsYXNzPSJydWJ5LWlkZW50aWZpZXIiPmRpc3BhdGNoPC9zcGFuPig8c3BhbiBjbGFzcz0icnVieS1pZGVudGlmaWVyIj51c2VyPC9zcGFuPiwgPHNwYW4gY2xhc3M9InJ1YnktaWRlbnRpZmllciI+Z3JvdXA8L3NwYW4+LCA8c3BhbiBjbGFzcz0icnVieS1pZGVudGlmaWVyIj50YXJnZXRzPC9zcGFuPiwgPHNwYW4gY2xhc3M9InJ1YnktaWRlbnRpZmllciI+b3B0czwvc3Bhbj4pIDxzcGFuIGNsYXNzPSJydWJ5LWtleXdvcmQga3ciPmVuZDwvc3Bhbj4KPC9wcmU+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgICAgPC9kaXY+CgogICAgICA8ZGl2IGlkPSJtZXRob2QtTTAwMDM1NyIgY2xhc3M9Im1ldGhvZC1kZXRhaWwiPgogICAgICAgIDxhIG5hbWU9Ik0wMDAzNTciPjwvYT4KCiAgICAgICAgPGRpdiBjbGFzcz0ibWV0aG9kLWhlYWRpbmciPgogICAgICAgICAgPGEgaHJlZj0iI00wMDAzNTciIGNsYXNzPSJtZXRob2Qtc2lnbmF0dXJlIj4KICAgICAgICAgIDxzcGFuIGNsYXNzPSJtZXRob2QtbmFtZSI+Y2hvd25fUjwvc3Bhbj48c3BhbiBjbGFzcz0ibWV0aG9kLWFyZ3MiPih1c2VyLCBncm91cCwgdGFyZ2V0cywgb3B0cz17fSk8L3NwYW4+CiAgICAgICAgICA8L2E+CiAgICAgICAgPC9kaXY+CiAgICAgIAogICAgICAgIDxkaXYgY2xhc3M9Im1ldGhvZC1kZXNjcmlwdGlvbiI+CiAgICAgICAgICA8cD4KQ2hhbmdlIHRoZSA8dHQ+dXNlcjwvdHQ+IGFuZCA8dHQ+Z3JvdXA8L3R0PiBvd25lcnNoaXAgb2YgdGhlCjx0dD50YXJnZXRzPC90dD4gcmVjdXJzaXZlbHkuIFlvdSBjYW4gbGVhdmUgZWl0aGVyIHRoZSB1c2VyIG9yIGdyb3VwIGFzIG5pbAppZiB5b3UgZG9uJiM4MjE2O3Qgd2FudCB0byBjaGFuZ2UgaXQuIFJldHVybnMgYW4gYXJyYXkgb2YgdGFyZ2V0cyBtb2RpZmllZApvciA8dHQ+ZmFsc2U8L3R0PiBpZiBhbGwgaGF2ZSB0aGUgZGVzaXJlZCBvd25lcnNoaXAuCjwvcD4KICAgICAgICAgIDxwPjxhIGNsYXNzPSJzb3VyY2UtdG9nZ2xlIiBocmVmPSIjIgogICAgICAgICAgICBvbmNsaWNrPSJ0b2dnbGVDb2RlKCdNMDAwMzU3LXNvdXJjZScpO3JldHVybiBmYWxzZTsiPltTb3VyY2VdPC9hPjwvcD4KICAgICAgICAgIDxkaXYgY2xhc3M9Im1ldGhvZC1zb3VyY2UtY29kZSIgaWQ9Ik0wMDAzNTctc291cmNlIj4KPHByZT4KPHNwYW4gY2xhc3M9InJ1YnktY29tbWVudCBjbXQiPiMgRmlsZSBsaWIvYXV0b21hdGVpdC9zaGVsbF9tYW5hZ2VyLnJiLCBsaW5lIDI1NDwvc3Bhbj4KICA8c3BhbiBjbGFzcz0icnVieS1rZXl3b3JkIGt3Ij5kZWY8L3NwYW4+IDxzcGFuIGNsYXNzPSJydWJ5LWlkZW50aWZpZXIiPmNob3duX1I8L3NwYW4+KDxzcGFuIGNsYXNzPSJydWJ5LWlkZW50aWZpZXIiPnVzZXI8L3NwYW4+LCA8c3BhbiBjbGFzcz0icnVieS1pZGVudGlmaWVyIj5ncm91cDwvc3Bhbj4sIDxzcGFuIGNsYXNzPSJydWJ5LWlkZW50aWZpZXIiPnRhcmdldHM8L3NwYW4+LCA8c3BhbiBjbGFzcz0icnVieS1pZGVudGlmaWVyIj5vcHRzPC9zcGFuPj17fSkgPHNwYW4gY2xhc3M9InJ1YnktaWRlbnRpZmllciI+ZGlzcGF0Y2g8L3NwYW4+KDxzcGFuIGNsYXNzPSJydWJ5LWlkZW50aWZpZXIiPnVzZXI8L3NwYW4+LCA8c3BhbiBjbGFzcz0icnVieS1pZGVudGlmaWVyIj5ncm91cDwvc3Bhbj4sIDxzcGFuIGNsYXNzPSJydWJ5LWlkZW50aWZpZXIiPnRhcmdldHM8L3NwYW4+LCA8c3BhbiBjbGFzcz0icnVieS1pZGVudGlmaWVyIj5vcHRzPC9zcGFuPikgPHNwYW4gY2xhc3M9InJ1Ynkta2V5d29yZCBrdyI+ZW5kPC9zcGFuPgo8L3ByZT4KICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgICA8L2Rpdj4KCiAgICAgIDxkaXYgaWQ9Im1ldGhvZC1NMDAwMzM2IiBjbGFzcz0ibWV0aG9kLWRldGFpbCI+CiAgICAgICAgPGEgbmFtZT0iTTAwMDMzNiI+PC9hPgoKICAgICAgICA8ZGl2IGNsYXNzPSJtZXRob2QtaGVhZGluZyI+CiAgICAgICAgICA8YSBocmVmPSIjTTAwMDMzNiIgY2xhc3M9Im1ldGhvZC1zaWduYXR1cmUiPgogICAgICAgICAgPHNwYW4gY2xhc3M9Im1ldGhvZC1uYW1lIj5jaHBlcm08L3NwYW4+PHNwYW4gY2xhc3M9Im1ldGhvZC1hcmdzIj4odGFyZ2V0cywgb3B0cz17fSk8L3NwYW4+CiAgICAgICAgICA8L2E+CiAgICAgICAgPC9kaXY+CiAgICAgIAogICAgICAgIDxkaXYgY2xhc3M9Im1ldGhvZC1kZXNjcmlwdGlvbiI+CiAgICAgICAgICA8cD4KQ2hhbmdlIHRoZSBwZXJtaXNzaW9ucyBvZiB0aGUgPHR0PnRhcmdldHM8L3R0Pi4gVGhpcyBjb21tYW5kIGlzIGxpa2UgdGhlIDxhCmhyZWY9IlNoZWxsTWFuYWdlci5odG1sI00wMDAzNTQiPmNobW9kPC9hPiBhbmQgPGEKaHJlZj0iU2hlbGxNYW5hZ2VyLmh0bWwjTTAwMDM1NiI+Y2hvd248L2E+IGluIGEgc2luZ2xlIGNvbW1hbmQuCjwvcD4KPHA+Ck9wdGlvbnM6CjwvcD4KPHVsPgo8bGk+OnJlY3Vyc2l2ZSAmIzgyMTI7IENoYW5nZSBmaWxlcyBhbmQgZGlyZWN0b3JpZXMgcmVjdXJzaXZlbHkuIERlZmF1bHRzIHRvCmZhbHNlLgoKPC9saT4KPGxpPjp1c2VyICYjODIxMjsgVXNlciBuYW1lIHRvIGNoYW5nZSBvd25lcnNoaXAgdG8uCgo8L2xpPgo8bGk+Omdyb3VwICYjODIxMjsgR3JvdXAgbmFtZSB0byBjaGFuZ2Ugb3duZXJzaGlwIHRvLgoKPC9saT4KPGxpPjptb2RlICYjODIxMjsgTW9kZSB0byB1c2UgYXMgb2N0YWwsIGUuZy4sIDx0dD4wNDAwPC90dD4gdG8gbWFrZSBhIGZpbGUKcmVhZGFibGUgb25seSB0byBpdHMgb3duZXIuCgo8L2xpPgo8bGk+OmRldGFpbHMgJiM4MjEyOyBSZXBvcnRzIHRoZSBmaWxlcyBtb2RpZmllZCwgcmF0aGVyIHRoYW4gdGhlIGFyZ3VtZW50cwptb2RpZmllZC4gQW4gYXJndW1lbnQgbWlnaHQgYmUgYSBzaW5nbGUgZGlyZWN0b3J5LCBidXQgdGhpcyBtYXkgcmVzdWx0IGluCm1vZGlmaWNhdGlvbnMgdG8gbWFueSBmaWxlcyB3aXRoaW4gdGhhdCBkaXJlY3RvcnkuIFVzZSA6ZGV0YWlscyBmb3IKc2l0dWF0aW9ucyB3aGVuIHRoZXJlJiM4MjE2O3MgYSBuZWVkIHRvIHNlZSBhbGwgZmlsZXMgYWN0dWFsbHkgY2hhbmdlZC4gVGhlCnJlYXNvbiA6ZGV0YWlscyBpcyBvZmYgYnkgZGVmYXVsdCBpcyB0aGF0IGl0IHdpbGwgZmxvb2QgdGhlIHNjcmVlbiB3aXRoIGEKbGlzdCBvZiBhbGwgZmlsZXMgbW9kaWZpZWQgaW4gYSBsYXJnZSBkaXJlY3RvcnksIDxhCmhyZWY9IlNoZWxsTWFuYWdlci5odG1sI00wMDAzMzEiPndoaWNoPC9hPiBpcyBvdmVyd2hlbG1pbmcgYW5kIHByb2JhYmx5CnVubmVjZXNzYXJ5IHVubGVzcyB5b3UgYWN0dWFsbHkgbmVlZCB0byBzZWUgdGhlc2UgZGV0YWlscy4gRGVmYXVsdHMgdG8KZmFsc2UuCgo8L2xpPgo8L3VsPgogICAgICAgICAgPHA+PGEgY2xhc3M9InNvdXJjZS10b2dnbGUiIGhyZWY9IiMiCiAgICAgICAgICAgIG9uY2xpY2s9InRvZ2dsZUNvZGUoJ00wMDAzMzYtc291cmNlJyk7cmV0dXJuIGZhbHNlOyI+W1NvdXJjZV08L2E+PC9wPgogICAgICAgICAgPGRpdiBjbGFzcz0ibWV0aG9kLXNvdXJjZS1jb2RlIiBpZD0iTTAwMDMzNi1zb3VyY2UiPgo8cHJlPgo8c3BhbiBjbGFzcz0icnVieS1jb21tZW50IGNtdCI+IyBGaWxlIGxpYi9hdXRvbWF0ZWl0L3NoZWxsX21hbmFnZXIucmIsIGxpbmUgMTI3PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJydWJ5LWtleXdvcmQga3ciPmRlZjwvc3Bhbj4gPHNwYW4gY2xhc3M9InJ1YnktaWRlbnRpZmllciI+Y2hwZXJtPC9zcGFuPig8c3BhbiBjbGFzcz0icnVieS1pZGVudGlmaWVyIj50YXJnZXRzPC9zcGFuPiwgPHNwYW4gY2xhc3M9InJ1YnktaWRlbnRpZmllciI+b3B0czwvc3Bhbj49e30pIDxzcGFuIGNsYXNzPSJydWJ5LWlkZW50aWZpZXIiPmRpc3BhdGNoPC9zcGFuPig8c3BhbiBjbGFzcz0icnVieS1pZGVudGlmaWVyIj50YXJnZXRzPC9zcGFuPiwgPHNwYW4gY2xhc3M9InJ1YnktaWRlbnRpZmllciI+b3B0czwvc3Bhbj4pIDxzcGFuIGNsYXNzPSJydWJ5LWtleXdvcmQga3ciPmVuZDwvc3Bhbj4KPC9wcmU+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgICAgPC9kaXY+CgogICAgICA8ZGl2IGlkPSJtZXRob2QtTTAwMDM0NiIgY2xhc3M9Im1ldGhvZC1kZXRhaWwiPgogICAgICAgIDxhIG5hbWU9Ik0wMDAzNDYiPjwvYT4KCiAgICAgICAgPGRpdiBjbGFzcz0ibWV0aG9kLWhlYWRpbmciPgogICAgICAgICAgPGEgaHJlZj0iI00wMDAzNDYiIGNsYXNzPSJtZXRob2Qtc2lnbmF0dXJlIj4KICAgICAgICAgIDxzcGFuIGNsYXNzPSJtZXRob2QtbmFtZSI+Y3A8L3NwYW4+PHNwYW4gY2xhc3M9Im1ldGhvZC1hcmdzIj4oc291cmNlcywgdGFyZ2V0LCBvcHRzPXt9KTwvc3Bhbj4KICAgICAgICAgIDwvYT4KICAgICAgICA8L2Rpdj4KICAgICAgCiAgICAgICAgPGRpdiBjbGFzcz0ibWV0aG9kLWRlc2NyaXB0aW9uIj4KICAgICAgICAgIDxwPgpDb3B5IHRoZSA8dHQ+c291cmNlczwvdHQ+IHRvIHRoZSA8dHQ+dGFyZ2V0PC90dD4uIFJldHVybnMgYW4gYXJyYXkgb2YKc291cmNlcyBjb3BpZWQgb3IgPHR0PmZhbHNlPC90dD4gaWYgYWxsIGFyZSBwcmVzZW50Lgo8L3A+CjxwPgpPcHRpb25zOgo8L3A+Cjx1bD4KPGxpPjpwcmVzZXJ2ZSAmIzgyMTI7IFByZXNlcnZlIGZpbGUgbW9kaWZpY2F0aW9uIHRpbWUgYW5kIG93bmVyc2hpcC4gRGVmYXVsdHMKdG8gZmFsc2UuIENhbiBiZSA8dHQ+dHJ1ZTwvdHQ+LCA8dHQ+ZmFsc2U8L3R0Piwgb3IgOnRyeS4gSWYgOnRyeSwgdGhlCnByb3BlcnRpZXMgd2lsbCBiZSBwcmVzZXJ2ZWQgaWYgcG9zc2libGUgb24gdGhlIHBsYXRmb3JtLCB3aGVyZWFzCjx0dD50cnVlPC90dD4gd2lsbCByYWlzZSBhbiBleGNlcHRpb24gaWYgbm90IGF2YWlsYWJsZS4KCjwvbGk+CjxsaT46cmVjdXJzaXZlICYjODIxMjsgQ29weSBmaWxlcyBhbmQgZGlyZWN0b3JpZXMgcmVjdXJzaXZlbHksIGJvb2xlYW4uCgo8L2xpPgo8L3VsPgogICAgICAgICAgPHA+PGEgY2xhc3M9InNvdXJjZS10b2dnbGUiIGhyZWY9IiMiCiAgICAgICAgICAgIG9uY2xpY2s9InRvZ2dsZUNvZGUoJ00wMDAzNDYtc291cmNlJyk7cmV0dXJuIGZhbHNlOyI+W1NvdXJjZV08L2E+PC9wPgogICAgICAgICAgPGRpdiBjbGFzcz0ibWV0aG9kLXNvdXJjZS1jb2RlIiBpZD0iTTAwMDM0Ni1zb3VyY2UiPgo8cHJlPgo8c3BhbiBjbGFzcz0icnVieS1jb21tZW50IGNtdCI+IyBGaWxlIGxpYi9hdXRvbWF0ZWl0L3NoZWxsX21hbmFnZXIucmIsIGxpbmUgMjA2PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJydWJ5LWtleXdvcmQga3ciPmRlZjwvc3Bhbj4gPHNwYW4gY2xhc3M9InJ1YnktaWRlbnRpZmllciI+Y3A8L3NwYW4+KDxzcGFuIGNsYXNzPSJydWJ5LWlkZW50aWZpZXIiPnNvdXJjZXM8L3NwYW4+LCA8c3BhbiBjbGFzcz0icnVieS1pZGVudGlmaWVyIj50YXJnZXQ8L3NwYW4+LCA8c3BhbiBjbGFzcz0icnVieS1pZGVudGlmaWVyIj5vcHRzPC9zcGFuPj17fSkgPHNwYW4gY2xhc3M9InJ1YnktaWRlbnRpZmllciI+ZGlzcGF0Y2g8L3NwYW4+KDxzcGFuIGNsYXNzPSJydWJ5LWlkZW50aWZpZXIiPnNvdXJjZXM8L3NwYW4+LCA8c3BhbiBjbGFzcz0icnVieS1pZGVudGlmaWVyIj50YXJnZXQ8L3NwYW4+LCA8c3BhbiBjbGFzcz0icnVieS1pZGVudGlmaWVyIj5vcHRzPC9zcGFuPikgPHNwYW4gY2xhc3M9InJ1Ynkta2V5d29yZCBrdyI+ZW5kPC9zcGFuPgo8L3ByZT4KICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgICA8L2Rpdj4KCiAgICAgIDxkaXYgaWQ9Im1ldGhvZC1NMDAwMzQ4IiBjbGFzcz0ibWV0aG9kLWRldGFpbCI+CiAgICAgICAgPGEgbmFtZT0iTTAwMDM0OCI+PC9hPgoKICAgICAgICA8ZGl2IGNsYXNzPSJtZXRob2QtaGVhZGluZyI+CiAgICAgICAgICA8YSBocmVmPSIjTTAwMDM0OCIgY2xhc3M9Im1ldGhvZC1zaWduYXR1cmUiPgogICAgICAgICAgPHNwYW4gY2xhc3M9Im1ldGhvZC1uYW1lIj5jcF9SPC9zcGFuPjxzcGFuIGNsYXNzPSJtZXRob2QtYXJncyI+KHNvdXJjZXMsIHRhcmdldCwgb3B0cz17fSk8L3NwYW4+CiAgICAgICAgICA8L2E+CiAgICAgICAgPC9kaXY+CiAgICAgIAogICAgICAgIDxkaXYgY2xhc3M9Im1ldGhvZC1kZXNjcmlwdGlvbiI+CiAgICAgICAgICA8cD4KQ29weSB0aGUgPHR0PnNvdXJjZXM8L3R0PiB0byB0aGUgPHR0PnRhcmdldDwvdHQ+IHJlY3Vyc2l2ZWx5LiBSZXR1cm5zIGFuCmFycmF5IG9mIHNvdXJjZXMgY29waWVkIG9yIDx0dD5mYWxzZTwvdHQ+IGlmIGFsbCBhcmUgcHJlc2VudC4KPC9wPgogICAgICAgICAgPHA+PGEgY2xhc3M9InNvdXJjZS10b2dnbGUiIGhyZWY9IiMiCiAgICAgICAgICAgIG9uY2xpY2s9InRvZ2dsZUNvZGUoJ00wMDAzNDgtc291cmNlJyk7cmV0dXJuIGZhbHNlOyI+W1NvdXJjZV08L2E+PC9wPgogICAgICAgICAgPGRpdiBjbGFzcz0ibWV0aG9kLXNvdXJjZS1jb2RlIiBpZD0iTTAwMDM0OC1zb3VyY2UiPgo8cHJlPgo8c3BhbiBjbGFzcz0icnVieS1jb21tZW50IGNtdCI+IyBGaWxlIGxpYi9hdXRvbWF0ZWl0L3NoZWxsX21hbmFnZXIucmIsIGxpbmUgMjE0PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJydWJ5LWtleXdvcmQga3ciPmRlZjwvc3Bhbj4gPHNwYW4gY2xhc3M9InJ1YnktaWRlbnRpZmllciI+Y3BfUjwvc3Bhbj4oPHNwYW4gY2xhc3M9InJ1YnktaWRlbnRpZmllciI+c291cmNlczwvc3Bhbj4sIDxzcGFuIGNsYXNzPSJydWJ5LWlkZW50aWZpZXIiPnRhcmdldDwvc3Bhbj4sIDxzcGFuIGNsYXNzPSJydWJ5LWlkZW50aWZpZXIiPm9wdHM8L3NwYW4+PXt9KSA8c3BhbiBjbGFzcz0icnVieS1pZGVudGlmaWVyIj5kaXNwYXRjaDwvc3Bhbj4oPHNwYW4gY2xhc3M9InJ1YnktaWRlbnRpZmllciI+c291cmNlczwvc3Bhbj4sIDxzcGFuIGNsYXNzPSJydWJ5LWlkZW50aWZpZXIiPnRhcmdldDwvc3Bhbj4sIDxzcGFuIGNsYXNzPSJydWJ5LWlkZW50aWZpZXIiPm9wdHM8L3NwYW4+KSA8c3BhbiBjbGFzcz0icnVieS1rZXl3b3JkIGt3Ij5lbmQ8L3NwYW4+CjwvcHJlPgogICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICAgIDwvZGl2PgoKICAgICAgPGRpdiBpZD0ibWV0aG9kLU0wMDAzNDciIGNsYXNzPSJtZXRob2QtZGV0YWlsIj4KICAgICAgICA8YSBuYW1lPSJNMDAwMzQ3Ij48L2E+CgogICAgICAgIDxkaXYgY2xhc3M9Im1ldGhvZC1oZWFkaW5nIj4KICAgICAgICAgIDxhIGhyZWY9IiNNMDAwMzQ3IiBjbGFzcz0ibWV0aG9kLXNpZ25hdHVyZSI+CiAgICAgICAgICA8c3BhbiBjbGFzcz0ibWV0aG9kLW5hbWUiPmNwX3I8L3NwYW4+PHNwYW4gY2xhc3M9Im1ldGhvZC1hcmdzIj4oc291cmNlcywgdGFyZ2V0LCBvcHRzPXt9KTwvc3Bhbj4KICAgICAgICAgIDwvYT4KICAgICAgICA8L2Rpdj4KICAgICAgCiAgICAgICAgPGRpdiBjbGFzcz0ibWV0aG9kLWRlc2NyaXB0aW9uIj4KICAgICAgICAgIDxwPgpDb3B5IHRoZSA8dHQ+c291cmNlczwvdHQ+IHRvIHRoZSA8dHQ+dGFyZ2V0PC90dD4gcmVjdXJzaXZlbHkuIFJldHVybnMgYW4KYXJyYXkgb2Ygc291cmNlcyBjb3BpZWQgb3IgPHR0PmZhbHNlPC90dD4gaWYgYWxsIGFyZSBwcmVzZW50Lgo8L3A+CiAgICAgICAgICA8cD48YSBjbGFzcz0ic291cmNlLXRvZ2dsZSIgaHJlZj0iIyIKICAgICAgICAgICAgb25jbGljaz0idG9nZ2xlQ29kZSgnTTAwMDM0Ny1zb3VyY2UnKTtyZXR1cm4gZmFsc2U7Ij5bU291cmNlXTwvYT48L3A+CiAgICAgICAgICA8ZGl2IGNsYXNzPSJtZXRob2Qtc291cmNlLWNvZGUiIGlkPSJNMDAwMzQ3LXNvdXJjZSI+CjxwcmU+CjxzcGFuIGNsYXNzPSJydWJ5LWNvbW1lbnQgY210Ij4jIEZpbGUgbGliL2F1dG9tYXRlaXQvc2hlbGxfbWFuYWdlci5yYiwgbGluZSAyMTA8L3NwYW4+CiAgPHNwYW4gY2xhc3M9InJ1Ynkta2V5d29yZCBrdyI+ZGVmPC9zcGFuPiA8c3BhbiBjbGFzcz0icnVieS1pZGVudGlmaWVyIj5jcF9yPC9zcGFuPig8c3BhbiBjbGFzcz0icnVieS1pZGVudGlmaWVyIj5zb3VyY2VzPC9zcGFuPiwgPHNwYW4gY2xhc3M9InJ1YnktaWRlbnRpZmllciI+dGFyZ2V0PC9zcGFuPiwgPHNwYW4gY2xhc3M9InJ1YnktaWRlbnRpZmllciI+b3B0czwvc3Bhbj49e30pIDxzcGFuIGNsYXNzPSJydWJ5LWlkZW50aWZpZXIiPmRpc3BhdGNoPC9zcGFuPig8c3BhbiBjbGFzcz0icnVieS1pZGVudGlmaWVyIj5zb3VyY2VzPC9zcGFuPiwgPHNwYW4gY2xhc3M9InJ1YnktaWRlbnRpZmllciI+dGFyZ2V0PC9zcGFuPiwgPHNwYW4gY2xhc3M9InJ1YnktaWRlbnRpZmllciI+b3B0czwvc3Bhbj4pIDxzcGFuIGNsYXNzPSJydWJ5LWtleXdvcmQga3ciPmVuZDwvc3Bhbj4KPC9wcmU+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgICAgPC9kaXY+CgogICAgICA8ZGl2IGlkPSJtZXRob2QtTTAwMDM1MyIgY2xhc3M9Im1ldGhvZC1kZXRhaWwiPgogICAgICAgIDxhIG5hbWU9Ik0wMDAzNTMiPjwvYT4KCiAgICAgICAgPGRpdiBjbGFzcz0ibWV0aG9kLWhlYWRpbmciPgogICAgICAgICAgPGEgaHJlZj0iI00wMDAzNTMiIGNsYXNzPSJtZXRob2Qtc2lnbmF0dXJlIj4KICAgICAgICAgIDxzcGFuIGNsYXNzPSJtZXRob2QtbmFtZSI+aW5zdGFsbDwvc3Bhbj48c3BhbiBjbGFzcz0ibWV0aG9kLWFyZ3MiPihzb3VyY2UsIHRhcmdldCwgbW9kZSk8L3NwYW4+CiAgICAgICAgICA8L2E+CiAgICAgICAgPC9kaXY+CiAgICAgIAogICAgICAgIDxkaXYgY2xhc3M9Im1ldGhvZC1kZXNjcmlwdGlvbiI+CiAgICAgICAgICA8cD4KQ29weSB0aGUgPHR0PnNvdXJjZTwvdHQ+IHRvIHRoZSA8dHQ+dGFyZ2V0PC90dD4gYW5kIHNldCBpdHMgPHR0Pm1vZGU8L3R0Pi4KUmV0dXJucyB0cnVlIGlmIHRoZSBmaWxlIHdhcyBpbnN0YWxsZWQgb3IgPHR0PmZhbHNlPC90dD4gaWYgYWxyZWFkeQpwcmVzZW50Lgo8L3A+CiAgICAgICAgICA8cD48YSBjbGFzcz0ic291cmNlLXRvZ2dsZSIgaHJlZj0iIyIKICAgICAgICAgICAgb25jbGljaz0idG9nZ2xlQ29kZSgnTTAwMDM1My1zb3VyY2UnKTtyZXR1cm4gZmFsc2U7Ij5bU291cmNlXTwvYT48L3A+CiAgICAgICAgICA8ZGl2IGNsYXNzPSJtZXRob2Qtc291cmNlLWNvZGUiIGlkPSJNMDAwMzUzLXNvdXJjZSI+CjxwcmU+CjxzcGFuIGNsYXNzPSJydWJ5LWNvbW1lbnQgY210Ij4jIEZpbGUgbGliL2F1dG9tYXRlaXQvc2hlbGxfbWFuYWdlci5yYiwgbGluZSAyMzQ8L3NwYW4+CiAgPHNwYW4gY2xhc3M9InJ1Ynkta2V5d29yZCBrdyI+ZGVmPC9zcGFuPiA8c3BhbiBjbGFzcz0icnVieS1pZGVudGlmaWVyIj5pbnN0YWxsPC9zcGFuPig8c3BhbiBjbGFzcz0icnVieS1pZGVudGlmaWVyIj5zb3VyY2U8L3NwYW4+LCA8c3BhbiBjbGFzcz0icnVieS1pZGVudGlmaWVyIj50YXJnZXQ8L3NwYW4+LCA8c3BhbiBjbGFzcz0icnVieS1pZGVudGlmaWVyIj5tb2RlPC9zcGFuPikgPHNwYW4gY2xhc3M9InJ1YnktaWRlbnRpZmllciI+ZGlzcGF0Y2g8L3NwYW4+KDxzcGFuIGNsYXNzPSJydWJ5LWlkZW50aWZpZXIiPnNvdXJjZTwvc3Bhbj4sIDxzcGFuIGNsYXNzPSJydWJ5LWlkZW50aWZpZXIiPnRhcmdldDwvc3Bhbj4sIDxzcGFuIGNsYXNzPSJydWJ5LWlkZW50aWZpZXIiPm1vZGU8L3NwYW4+KSA8c3BhbiBjbGFzcz0icnVieS1rZXl3b3JkIGt3Ij5lbmQ8L3NwYW4+CjwvcHJlPgogICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICAgIDwvZGl2PgoKICAgICAgPGRpdiBpZD0ibWV0aG9kLU0wMDAzNDMiIGNsYXNzPSJtZXRob2QtZGV0YWlsIj4KICAgICAgICA8YSBuYW1lPSJNMDAwMzQzIj48L2E+CgogICAgICAgIDxkaXYgY2xhc3M9Im1ldGhvZC1oZWFkaW5nIj4KICAgICAgICAgIDxhIGhyZWY9IiNNMDAwMzQzIiBjbGFzcz0ibWV0aG9kLXNpZ25hdHVyZSI+CiAgICAgICAgICA8c3BhbiBjbGFzcz0ibWV0aG9kLW5hbWUiPmxuPC9zcGFuPjxzcGFuIGNsYXNzPSJtZXRob2QtYXJncyI+KHNvdXJjZSwgdGFyZ2V0LCBvcHRzPXt9KTwvc3Bhbj4KICAgICAgICAgIDwvYT4KICAgICAgICA8L2Rpdj4KICAgICAgCiAgICAgICAgPGRpdiBjbGFzcz0ibWV0aG9kLWRlc2NyaXB0aW9uIj4KICAgICAgICAgIDxwPgpDcmVhdGUgYSBoYXJkIGxpbmsgYmV0d2VlbiB0aGUgPHR0PnNvdXJjZTwvdHQ+IGFuZCA8dHQ+dGFyZ2V0PC90dD4uIFlvdXIKcGxhdGZvcm0gbXVzdCBzdXBwb3J0IGhhcmQgbGlua3MgdG8gdXNlIHRoaXMuIFJldHVybnMgdGhlIHRhcmdldCBjcmVhdGVkIG9yCjx0dD5mYWxzZTwvdHQ+IGlmIHRoZSBsaW5rIGlzIGFscmVhZHkgcHJlc2VudC4KPC9wPgogICAgICAgICAgPHA+PGEgY2xhc3M9InNvdXJjZS10b2dnbGUiIGhyZWY9IiMiCiAgICAgICAgICAgIG9uY2xpY2s9InRvZ2dsZUNvZGUoJ00wMDAzNDMtc291cmNlJyk7cmV0dXJuIGZhbHNlOyI+W1NvdXJjZV08L2E+PC9wPgogICAgICAgICAgPGRpdiBjbGFzcz0ibWV0aG9kLXNvdXJjZS1jb2RlIiBpZD0iTTAwMDM0My1zb3VyY2UiPgo8cHJlPgo8c3BhbiBjbGFzcz0icnVieS1jb21tZW50IGNtdCI+IyBGaWxlIGxpYi9hdXRvbWF0ZWl0L3NoZWxsX21hbmFnZXIucmIsIGxpbmUgMTg0PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJydWJ5LWtleXdvcmQga3ciPmRlZjwvc3Bhbj4gPHNwYW4gY2xhc3M9InJ1YnktaWRlbnRpZmllciI+bG48L3NwYW4+KDxzcGFuIGNsYXNzPSJydWJ5LWlkZW50aWZpZXIiPnNvdXJjZTwvc3Bhbj4sIDxzcGFuIGNsYXNzPSJydWJ5LWlkZW50aWZpZXIiPnRhcmdldDwvc3Bhbj4sIDxzcGFuIGNsYXNzPSJydWJ5LWlkZW50aWZpZXIiPm9wdHM8L3NwYW4+PXt9KSA8c3BhbiBjbGFzcz0icnVieS1pZGVudGlmaWVyIj5kaXNwYXRjaDwvc3Bhbj4oPHNwYW4gY2xhc3M9InJ1YnktaWRlbnRpZmllciI+c291cmNlPC9zcGFuPiwgPHNwYW4gY2xhc3M9InJ1YnktaWRlbnRpZmllciI+dGFyZ2V0PC9zcGFuPiwgPHNwYW4gY2xhc3M9InJ1YnktaWRlbnRpZmllciI+b3B0czwvc3Bhbj4pIDxzcGFuIGNsYXNzPSJydWJ5LWtleXdvcmQga3ciPmVuZDwvc3Bhbj4KPC9wcmU+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgICAgPC9kaXY+CgogICAgICA8ZGl2IGlkPSJtZXRob2QtTTAwMDM0NCIgY2xhc3M9Im1ldGhvZC1kZXRhaWwiPgogICAgICAgIDxhIG5hbWU9Ik0wMDAzNDQiPjwvYT4KCiAgICAgICAgPGRpdiBjbGFzcz0ibWV0aG9kLWhlYWRpbmciPgogICAgICAgICAgPGEgaHJlZj0iI00wMDAzNDQiIGNsYXNzPSJtZXRob2Qtc2lnbmF0dXJlIj4KICAgICAgICAgIDxzcGFuIGNsYXNzPSJtZXRob2QtbmFtZSI+bG5fczwvc3Bhbj48c3BhbiBjbGFzcz0ibWV0aG9kLWFyZ3MiPihzb3VyY2VzLCB0YXJnZXQsIG9wdHM9e30pPC9zcGFuPgogICAgICAgICAgPC9hPgogICAgICAgIDwvZGl2PgogICAgICAKICAgICAgICA8ZGl2IGNsYXNzPSJtZXRob2QtZGVzY3JpcHRpb24iPgogICAgICAgICAgPHA+CkNyZWF0ZSBhIHN5bWJvbGljIGxpbmsgYmV0d2VlbiB0aGUgPHR0PnNvdXJjZXM8L3R0PiBhbmQgPHR0PnRhcmdldDwvdHQ+LgpZb3VyIHBsYXRmb3JtIG11c3Qgc3VwcG9ydCBzeW1ib2xpYyBsaW5rcyB0byB1c2UgdGhpcy4gUmV0dXJucyBhbiBhcnJheSBvZgpzb3VyY2VzIGxpbmtlZCBvciA8dHQ+ZmFsc2U8L3R0PiBpZiBhbGwgYXJlIGFscmVhZHkgcHJlc2VudC4KPC9wPgogICAgICAgICAgPHA+PGEgY2xhc3M9InNvdXJjZS10b2dnbGUiIGhyZWY9IiMiCiAgICAgICAgICAgIG9uY2xpY2s9InRvZ2dsZUNvZGUoJ00wMDAzNDQtc291cmNlJyk7cmV0dXJuIGZhbHNlOyI+W1NvdXJjZV08L2E+PC9wPgogICAgICAgICAgPGRpdiBjbGFzcz0ibWV0aG9kLXNvdXJjZS1jb2RlIiBpZD0iTTAwMDM0NC1zb3VyY2UiPgo8cHJlPgo8c3BhbiBjbGFzcz0icnVieS1jb21tZW50IGNtdCI+IyBGaWxlIGxpYi9hdXRvbWF0ZWl0L3NoZWxsX21hbmFnZXIucmIsIGxpbmUgMTg5PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJydWJ5LWtleXdvcmQga3ciPmRlZjwvc3Bhbj4gPHNwYW4gY2xhc3M9InJ1YnktaWRlbnRpZmllciI+bG5fczwvc3Bhbj4oPHNwYW4gY2xhc3M9InJ1YnktaWRlbnRpZmllciI+c291cmNlczwvc3Bhbj4sIDxzcGFuIGNsYXNzPSJydWJ5LWlkZW50aWZpZXIiPnRhcmdldDwvc3Bhbj4sIDxzcGFuIGNsYXNzPSJydWJ5LWlkZW50aWZpZXIiPm9wdHM8L3NwYW4+PXt9KSA8c3BhbiBjbGFzcz0icnVieS1pZGVudGlmaWVyIj5kaXNwYXRjaDwvc3Bhbj4oPHNwYW4gY2xhc3M9InJ1YnktaWRlbnRpZmllciI+c291cmNlczwvc3Bhbj4sIDxzcGFuIGNsYXNzPSJydWJ5LWlkZW50aWZpZXIiPnRhcmdldDwvc3Bhbj4sIDxzcGFuIGNsYXNzPSJydWJ5LWlkZW50aWZpZXIiPm9wdHM8L3NwYW4+KSA8c3BhbiBjbGFzcz0icnVieS1rZXl3b3JkIGt3Ij5lbmQ8L3NwYW4+CjwvcHJlPgogICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICAgIDwvZGl2PgoKICAgICAgPGRpdiBpZD0ibWV0aG9kLU0wMDAzNDUiIGNsYXNzPSJtZXRob2QtZGV0YWlsIj4KICAgICAgICA8YSBuYW1lPSJNMDAwMzQ1Ij48L2E+CgogICAgICAgIDxkaXYgY2xhc3M9Im1ldGhvZC1oZWFkaW5nIj4KICAgICAgICAgIDxhIGhyZWY9IiNNMDAwMzQ1IiBjbGFzcz0ibWV0aG9kLXNpZ25hdHVyZSI+CiAgICAgICAgICA8c3BhbiBjbGFzcz0ibWV0aG9kLW5hbWUiPmxuX3NmPC9zcGFuPjxzcGFuIGNsYXNzPSJtZXRob2QtYXJncyI+KHNvdXJjZXMsIHRhcmdldCwgb3B0cz17fSk8L3NwYW4+CiAgICAgICAgICA8L2E+CiAgICAgICAgPC9kaXY+CiAgICAgIAogICAgICAgIDxkaXYgY2xhc3M9Im1ldGhvZC1kZXNjcmlwdGlvbiI+CiAgICAgICAgICA8cD4KQ3JlYXRlIGEgc3ltYm9saWMgbGluayBiZXR3ZWVuIHRoZSA8dHQ+c291cmNlczwvdHQ+IGFuZCA8dHQ+dGFyZ2V0PC90dD4uIElmCnRoZSA8dHQ+dGFyZ2V0PC90dD4gYWxyZWFkeSBleGlzdHMsIHdpbGwgcmVtb3ZlIGl0IGFuZCByZWNyZWF0ZSBpdC4gWW91cgpwbGF0Zm9ybSBtdXN0IHN1cHBvcnQgc3ltYm9saWMgbGlua3MgdG8gdXNlIHRoaXMuIFJldHVybnMgYW4gYXJyYXkgb2YKc291cmNlcyBsaW5rZWQgb3IgPHR0PmZhbHNlPC90dD4gaWYgYWxsIGFyZSBhbHJlYWR5IHByZXNlbnQuCjwvcD4KICAgICAgICAgIDxwPjxhIGNsYXNzPSJzb3VyY2UtdG9nZ2xlIiBocmVmPSIjIgogICAgICAgICAgICBvbmNsaWNrPSJ0b2dnbGVDb2RlKCdNMDAwMzQ1LXNvdXJjZScpO3JldHVybiBmYWxzZTsiPltTb3VyY2VdPC9hPjwvcD4KICAgICAgICAgIDxkaXYgY2xhc3M9Im1ldGhvZC1zb3VyY2UtY29kZSIgaWQ9Ik0wMDAzNDUtc291cmNlIj4KPHByZT4KPHNwYW4gY2xhc3M9InJ1YnktY29tbWVudCBjbXQiPiMgRmlsZSBsaWIvYXV0b21hdGVpdC9zaGVsbF9tYW5hZ2VyLnJiLCBsaW5lIDE5NTwvc3Bhbj4KICA8c3BhbiBjbGFzcz0icnVieS1rZXl3b3JkIGt3Ij5kZWY8L3NwYW4+IDxzcGFuIGNsYXNzPSJydWJ5LWlkZW50aWZpZXIiPmxuX3NmPC9zcGFuPig8c3BhbiBjbGFzcz0icnVieS1pZGVudGlmaWVyIj5zb3VyY2VzPC9zcGFuPiwgPHNwYW4gY2xhc3M9InJ1YnktaWRlbnRpZmllciI+dGFyZ2V0PC9zcGFuPiwgPHNwYW4gY2xhc3M9InJ1YnktaWRlbnRpZmllciI+b3B0czwvc3Bhbj49e30pIDxzcGFuIGNsYXNzPSJydWJ5LWlkZW50aWZpZXIiPmRpc3BhdGNoPC9zcGFuPig8c3BhbiBjbGFzcz0icnVieS1pZGVudGlmaWVyIj5zb3VyY2VzPC9zcGFuPiwgPHNwYW4gY2xhc3M9InJ1YnktaWRlbnRpZmllciI+dGFyZ2V0PC9zcGFuPiwgPHNwYW4gY2xhc3M9InJ1YnktaWRlbnRpZmllciI+b3B0czwvc3Bhbj4pIDxzcGFuIGNsYXNzPSJydWJ5LWtleXdvcmQga3ciPmVuZDwvc3Bhbj4KPC9wcmU+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgICAgPC9kaXY+CgogICAgICA8ZGl2IGlkPSJtZXRob2QtTTAwMDM0MCIgY2xhc3M9Im1ldGhvZC1kZXRhaWwiPgogICAgICAgIDxhIG5hbWU9Ik0wMDAzNDAiPjwvYT4KCiAgICAgICAgPGRpdiBjbGFzcz0ibWV0aG9kLWhlYWRpbmciPgogICAgICAgICAgPGEgaHJlZj0iI00wMDAzNDAiIGNsYXNzPSJtZXRob2Qtc2lnbmF0dXJlIj4KICAgICAgICAgIDxzcGFuIGNsYXNzPSJtZXRob2QtbmFtZSI+bWtkaXI8L3NwYW4+PHNwYW4gY2xhc3M9Im1ldGhvZC1hcmdzIj4oZGlycywgb3B0cz17fSwgJmFtcDtibG9jayk8L3NwYW4+CiAgICAgICAgICA8L2E+CiAgICAgICAgPC9kaXY+CiAgICAgIAogICAgICAgIDxkaXYgY2xhc3M9Im1ldGhvZC1kZXNjcmlwdGlvbiI+CiAgICAgICAgICA8cD4KQ3JlYXRlIGEgZGlyZWN0b3J5IG9yIGRpcmVjdG9yaWVzLiBSZXR1cm5zIGFuIGFycmF5IG9mIGRpcmVjdG9yaWVzIGNyZWF0ZWQKb3IgPHR0PmZhbHNlPC90dD4gaWYgYWxsIGRpcmVjdG9yaWVzIGFyZSBhbHJlYWR5IHByZXNlbnQuCjwvcD4KPHA+Ck9wdGlvbnM6CjwvcD4KPHVsPgo8bGk+OnBhcmVudHMgJiM4MjEyOyBDcmVhdGUgcGFyZW50cywgbGlrZSAmcXVvdDs8YQpocmVmPSJTaGVsbE1hbmFnZXIuaHRtbCNNMDAwMzQwIj5ta2RpcjwvYT4gLXAmcXVvdDsuIEJvb2xlYW4uCgo8L2xpPgo8bGk+Om1vZGUsIDp1c2VyLCA6Z3JvdXAgJiM4MjEyOyBTZWUgPGEKaHJlZj0iU2hlbGxNYW5hZ2VyLmh0bWwjTTAwMDMzNiI+Y2hwZXJtPC9hPgoKPC9saT4KPC91bD4KPHA+CjxiPldBUk5JTkc8L2I+OiBQcmV2aWV3aW5nIGNvZGUgY2FuIGJlIGRhbmdlcm91cy4gUmVhZCA8YQpocmVmPSIuLi8uLi9maWxlcy9kb2NzL3ByZXZpZXdzX3R4dC5odG1sIj5wcmV2aWV3cy50eHQ8L2E+IGZvciBpbnN0cnVjdGlvbnMKb24gaG93IHRvIHdyaXRlIGNvZGUgdGhhdCBjYW4gYmUgc2FmZWx5IHByZXZpZXdlZC4KPC9wPgogICAgICAgICAgPHA+PGEgY2xhc3M9InNvdXJjZS10b2dnbGUiIGhyZWY9IiMiCiAgICAgICAgICAgIG9uY2xpY2s9InRvZ2dsZUNvZGUoJ00wMDAzNDAtc291cmNlJyk7cmV0dXJuIGZhbHNlOyI+W1NvdXJjZV08L2E+PC9wPgogICAgICAgICAgPGRpdiBjbGFzcz0ibWV0aG9kLXNvdXJjZS1jb2RlIiBpZD0iTTAwMDM0MC1zb3VyY2UiPgo8cHJlPgo8c3BhbiBjbGFzcz0icnVieS1jb21tZW50IGNtdCI+IyBGaWxlIGxpYi9hdXRvbWF0ZWl0L3NoZWxsX21hbmFnZXIucmIsIGxpbmUgMTU4PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJydWJ5LWtleXdvcmQga3ciPmRlZjwvc3Bhbj4gPHNwYW4gY2xhc3M9InJ1YnktaWRlbnRpZmllciI+bWtkaXI8L3NwYW4+KDxzcGFuIGNsYXNzPSJydWJ5LWlkZW50aWZpZXIiPmRpcnM8L3NwYW4+LCA8c3BhbiBjbGFzcz0icnVieS1pZGVudGlmaWVyIj5vcHRzPC9zcGFuPj17fSwgPHNwYW4gY2xhc3M9InJ1Ynktb3BlcmF0b3IiPiZhbXA7PC9zcGFuPjxzcGFuIGNsYXNzPSJydWJ5LWlkZW50aWZpZXIiPmJsb2NrPC9zcGFuPikgPHNwYW4gY2xhc3M9InJ1YnktaWRlbnRpZmllciI+ZGlzcGF0Y2g8L3NwYW4+KDxzcGFuIGNsYXNzPSJydWJ5LWlkZW50aWZpZXIiPmRpcnM8L3NwYW4+LCA8c3BhbiBjbGFzcz0icnVieS1vcGVyYXRvciI+JmFtcDs8L3NwYW4+PHNwYW4gY2xhc3M9InJ1YnktaWRlbnRpZmllciI+YmxvY2s8L3NwYW4+KSA8c3BhbiBjbGFzcz0icnVieS1rZXl3b3JkIGt3Ij5lbmQ8L3NwYW4+CjwvcHJlPgogICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICAgIDwvZGl2PgoKICAgICAgPGRpdiBpZD0ibWV0aG9kLU0wMDAzNDEiIGNsYXNzPSJtZXRob2QtZGV0YWlsIj4KICAgICAgICA8YSBuYW1lPSJNMDAwMzQxIj48L2E+CgogICAgICAgIDxkaXYgY2xhc3M9Im1ldGhvZC1oZWFkaW5nIj4KICAgICAgICAgIDxhIGhyZWY9IiNNMDAwMzQxIiBjbGFzcz0ibWV0aG9kLXNpZ25hdHVyZSI+CiAgICAgICAgICA8c3BhbiBjbGFzcz0ibWV0aG9kLW5hbWUiPm1rZGlyX3A8L3NwYW4+PHNwYW4gY2xhc3M9Im1ldGhvZC1hcmdzIj4oZGlycywgb3B0cz17fSwgJmFtcDtibG9jayk8L3NwYW4+CiAgICAgICAgICA8L2E+CiAgICAgICAgPC9kaXY+CiAgICAgIAogICAgICAgIDxkaXYgY2xhc3M9Im1ldGhvZC1kZXNjcmlwdGlvbiI+CiAgICAgICAgICA8cD4KQ3JlYXRlIGEgZGlyZWN0b3J5IG9yIGRpcmVjdG9yaWVzIHdpdGggdGhlaXIgcGFyZW50cy4gUmV0dXJucyBhbiBhcnJheSBvZgpkaXJlY3RvcmllcyBjcmVhdGVkIG9yIDx0dD5mYWxzZTwvdHQ+IGlmIGFsbCBkaXJlY3RvcmllcyBhcmUgYWxyZWFkeQpwcmVzZW50Lgo8L3A+CjxwPgpPcHRpb25zIHNhbWUgYXMgPGEgaHJlZj0iU2hlbGxNYW5hZ2VyLmh0bWwjTTAwMDM0MCI+bWtkaXI8L2E+Lgo8L3A+CjxwPgpFeGFtcGxlOgo8L3A+CjxwcmU+CiAgRmlsZS5leGlzdHM/KCZxdW90Oy90bXAvZm9vJnF1b3Q7KSAjID0mZ3Q7IGZhbHNlCiAgbWtkaXJfcCgmcXVvdDsvdG1wL2Zvby9iYXImcXVvdDspCiAgRmlsZS5leGlzdHM/KCZxdW90Oy90bXAvZm9vJnF1b3Q7KSAjID0mZ3Q7IHRydWUKICBGaWxlLmV4aXN0cz8oJnF1b3Q7L3RtcC9mb28vYmFyJnF1b3Q7KSAjID0mZ3Q7IHRydWUKPC9wcmU+CjxwPgo8Yj5XQVJOSU5HPC9iPjogUHJldmlld2luZyBjb2RlIGNhbiBiZSBkYW5nZXJvdXMuIFJlYWQgPGEKaHJlZj0iLi4vLi4vZmlsZXMvZG9jcy9wcmV2aWV3c190eHQuaHRtbCI+cHJldmlld3MudHh0PC9hPiBmb3IgaW5zdHJ1Y3Rpb25zCm9uIGhvdyB0byB3cml0ZSBjb2RlIHRoYXQgY2FuIGJlIHNhZmVseSBwcmV2aWV3ZWQuCjwvcD4KICAgICAgICAgIDxwPjxhIGNsYXNzPSJzb3VyY2UtdG9nZ2xlIiBocmVmPSIjIgogICAgICAgICAgICBvbmNsaWNrPSJ0b2dnbGVDb2RlKCdNMDAwMzQxLXNvdXJjZScpO3JldHVybiBmYWxzZTsiPltTb3VyY2VdPC9hPjwvcD4KICAgICAgICAgIDxkaXYgY2xhc3M9Im1ldGhvZC1zb3VyY2UtY29kZSIgaWQ9Ik0wMDAzNDEtc291cmNlIj4KPHByZT4KPHNwYW4gY2xhc3M9InJ1YnktY29tbWVudCBjbXQiPiMgRmlsZSBsaWIvYXV0b21hdGVpdC9zaGVsbF9tYW5hZ2VyLnJiLCBsaW5lIDE3NDwvc3Bhbj4KICA8c3BhbiBjbGFzcz0icnVieS1rZXl3b3JkIGt3Ij5kZWY8L3NwYW4+IDxzcGFuIGNsYXNzPSJydWJ5LWlkZW50aWZpZXIiPm1rZGlyX3A8L3NwYW4+KDxzcGFuIGNsYXNzPSJydWJ5LWlkZW50aWZpZXIiPmRpcnM8L3NwYW4+LCA8c3BhbiBjbGFzcz0icnVieS1pZGVudGlmaWVyIj5vcHRzPC9zcGFuPj17fSwgPHNwYW4gY2xhc3M9InJ1Ynktb3BlcmF0b3IiPiZhbXA7PC9zcGFuPjxzcGFuIGNsYXNzPSJydWJ5LWlkZW50aWZpZXIiPmJsb2NrPC9zcGFuPikgPHNwYW4gY2xhc3M9InJ1YnktaWRlbnRpZmllciI+ZGlzcGF0Y2g8L3NwYW4+KDxzcGFuIGNsYXNzPSJydWJ5LWlkZW50aWZpZXIiPmRpcnM8L3NwYW4+LCA8c3BhbiBjbGFzcz0icnVieS1vcGVyYXRvciI+JmFtcDs8L3NwYW4+PHNwYW4gY2xhc3M9InJ1YnktaWRlbnRpZmllciI+YmxvY2s8L3NwYW4+KSA8c3BhbiBjbGFzcz0icnVieS1rZXl3b3JkIGt3Ij5lbmQ8L3NwYW4+CjwvcHJlPgogICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICAgIDwvZGl2PgoKICAgICAgPGRpdiBpZD0ibWV0aG9kLU0wMDAzMzMiIGNsYXNzPSJtZXRob2QtZGV0YWlsIj4KICAgICAgICA8YSBuYW1lPSJNMDAwMzMzIj48L2E+CgogICAgICAgIDxkaXYgY2xhc3M9Im1ldGhvZC1oZWFkaW5nIj4KICAgICAgICAgIDxhIGhyZWY9IiNNMDAwMzMzIiBjbGFzcz0ibWV0aG9kLXNpZ25hdHVyZSI+CiAgICAgICAgICA8c3BhbiBjbGFzcz0ibWV0aG9kLW5hbWUiPm1rdGVtcDwvc3Bhbj48c3BhbiBjbGFzcz0ibWV0aG9kLWFyZ3MiPihuYW1lPW5pbCkge3xwYXRofCAuLi59PC9zcGFuPgogICAgICAgICAgPC9hPgogICAgICAgIDwvZGl2PgogICAgICAKICAgICAgICA8ZGl2IGNsYXNzPSJtZXRob2QtZGVzY3JpcHRpb24iPgogICAgICAgICAgPHA+CkNyZWF0ZXMgYSB0ZW1wb3JhcnkgZmlsZS4gT3B0aW9uYWxseSB0YWtlcyBhIDx0dD5uYW1lPC90dD4gYXJndW1lbnQgPGEKaHJlZj0iU2hlbGxNYW5hZ2VyLmh0bWwjTTAwMDMzMSI+d2hpY2g8L2E+IGlzIHB1cmVseSBjb3NtZXRpYywgZS5nLiwgaWYgdGhlCjx0dD5uYW1lPC90dD4gaXMgJnF1b3Q7Zm9vJnF1b3Q7LCB0aGUgcm91dGluZSBtYXkgY3JlYXRlIGEgdGVtcG9yYXJ5IGZpbGUKbmFtZWQgPHR0Pi90bXAvZm9vX3FlS283bkprMXM8L3R0Pi4KPC9wPgo8cD4KV2hlbiBjYWxsZWQgd2l0aCBhIGJsb2NrLCBpbnZva2VzIHRoZSBibG9jayB3aXRoIHRoZSBwYXRoIG9mIHRoZSB0ZW1wb3JhcnkKZmlsZSBhbmQgZGVsZXRlcyB0aGUgZmlsZSBhdCB0aGUgZW5kIG9mIHRoZSBibG9jay4KPC9wPgo8cD4KV2l0aG91dCBhIGJsb2NrLCByZXR1cm5zIHRoZSBwYXRoIG9mIHRoZSB0ZW1wb3JhcnkgZmlsZSBhbmQgeW91JiM4MjE2O3JlCnJlc3BvbnNpYmxlIGZvciByZW1vdmluZyBpdCB3aGVuIGRvbmUuCjwvcD4KICAgICAgICAgIDxwPjxhIGNsYXNzPSJzb3VyY2UtdG9nZ2xlIiBocmVmPSIjIgogICAgICAgICAgICBvbmNsaWNrPSJ0b2dnbGVDb2RlKCdNMDAwMzMzLXNvdXJjZScpO3JldHVybiBmYWxzZTsiPltTb3VyY2VdPC9hPjwvcD4KICAgICAgICAgIDxkaXYgY2xhc3M9Im1ldGhvZC1zb3VyY2UtY29kZSIgaWQ9Ik0wMDAzMzMtc291cmNlIj4KPHByZT4KPHNwYW4gY2xhc3M9InJ1YnktY29tbWVudCBjbXQiPiMgRmlsZSBsaWIvYXV0b21hdGVpdC9zaGVsbF9tYW5hZ2VyLnJiLCBsaW5lIDc0PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJydWJ5LWtleXdvcmQga3ciPmRlZjwvc3Bhbj4gPHNwYW4gY2xhc3M9InJ1YnktaWRlbnRpZmllciI+bWt0ZW1wPC9zcGFuPig8c3BhbiBjbGFzcz0icnVieS1pZGVudGlmaWVyIj5uYW1lPC9zcGFuPj08c3BhbiBjbGFzcz0icnVieS1rZXl3b3JkIGt3Ij5uaWw8L3NwYW4+LCA8c3BhbiBjbGFzcz0icnVieS1vcGVyYXRvciI+JmFtcDs8L3NwYW4+PHNwYW4gY2xhc3M9InJ1YnktaWRlbnRpZmllciI+YmxvY2s8L3NwYW4+KSA8c3BhbiBjbGFzcz0icnVieS1jb21tZW50IGNtdCI+IyA6eWllbGRzOiBwYXRoPC9zcGFuPgogICAgPHNwYW4gY2xhc3M9InJ1YnktaWRlbnRpZmllciI+ZGlzcGF0Y2g8L3NwYW4+KDxzcGFuIGNsYXNzPSJydWJ5LWlkZW50aWZpZXIiPm5hbWU8L3NwYW4+LCA8c3BhbiBjbGFzcz0icnVieS1vcGVyYXRvciI+JmFtcDs8L3NwYW4+PHNwYW4gY2xhc3M9InJ1YnktaWRlbnRpZmllciI+YmxvY2s8L3NwYW4+KQogIDxzcGFuIGNsYXNzPSJydWJ5LWtleXdvcmQga3ciPmVuZDwvc3Bhbj4KPC9wcmU+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgICAgPC9kaXY+CgogICAgICA8ZGl2IGlkPSJtZXRob2QtTTAwMDMzNCIgY2xhc3M9Im1ldGhvZC1kZXRhaWwiPgogICAgICAgIDxhIG5hbWU9Ik0wMDAzMzQiPjwvYT4KCiAgICAgICAgPGRpdiBjbGFzcz0ibWV0aG9kLWhlYWRpbmciPgogICAgICAgICAgPGEgaHJlZj0iI00wMDAzMzQiIGNsYXNzPSJtZXRob2Qtc2lnbmF0dXJlIj4KICAgICAgICAgIDxzcGFuIGNsYXNzPSJtZXRob2QtbmFtZSI+bWt0ZW1wZGlyPC9zcGFuPjxzcGFuIGNsYXNzPSJtZXRob2QtYXJncyI+KG5hbWU9bmlsKSB7fHBhdGh8IC4uLn08L3NwYW4+CiAgICAgICAgICA8L2E+CiAgICAgICAgPC9kaXY+CiAgICAgIAogICAgICAgIDxkaXYgY2xhc3M9Im1ldGhvZC1kZXNjcmlwdGlvbiI+CiAgICAgICAgICA8cD4KQ3JlYXRlcyBhIHRlbXBvcmFyeSBkaXJlY3RvcnkuIFNlZSA8YQpocmVmPSJTaGVsbE1hbmFnZXIuaHRtbCNNMDAwMzMzIj5ta3RlbXA8L2E+IGZvciBkZXRhaWxzIG9uIHRoZQo8dHQ+bmFtZTwvdHQ+IGFyZ3VtZW50Lgo8L3A+CjxwPgpXaGVuIGNhbGxlZCB3aXRoIGEgYmxvY2ssIGludm9rZXMgdGhlIGJsb2NrIHdpdGggdGhlIHBhdGggb2YgdGhlIHRlbXBvcmFyeQpkaXJlY3RvcnkgYW5kIHJlY3Vyc2l2ZWx5IGRlbGV0ZXMgdGhlIGRpcmVjdG9yeSBhbmQgaXRzIGNvbnRlbnRzIGF0IHRoZSBlbmQKb2YgdGhlIGJsb2NrLgo8L3A+CjxwPgpXaXRob3V0IGEgYmxvY2ssIHJldHVybnMgdGhlIHBhdGggb2YgdGhlIHRlbXBvcmFyeSBkaXJlY3RvcnkgYW5kCnlvdSYjODIxNjtyZSByZXNwb25zaWJsZSBmb3IgcmVtb3ZpbmcgaXQgd2hlbiBkb25lLgo8L3A+CjxwPgpDQVVUSU9OOiBSZWFkIG5vdGVzIGF0IHRoZSB0b3Agb2YgPGEKaHJlZj0iU2hlbGxNYW5hZ2VyLmh0bWwiPlNoZWxsTWFuYWdlcjwvYT4gZm9yIHBvdGVudGlhbGx5IHByb2JsZW1hdGljCnNpdHVhdGlvbnMgdGhhdCBtYXkgYmUgZW5jb3VudGVyZWQgaWYgdXNpbmcgdGhpcyBjb21tYW5kIGluIHByZXZpZXcgbW9kZSEKPC9wPgogICAgICAgICAgPHA+PGEgY2xhc3M9InNvdXJjZS10b2dnbGUiIGhyZWY9IiMiCiAgICAgICAgICAgIG9uY2xpY2s9InRvZ2dsZUNvZGUoJ00wMDAzMzQtc291cmNlJyk7cmV0dXJuIGZhbHNlOyI+W1NvdXJjZV08L2E+PC9wPgogICAgICAgICAgPGRpdiBjbGFzcz0ibWV0aG9kLXNvdXJjZS1jb2RlIiBpZD0iTTAwMDMzNC1zb3VyY2UiPgo8cHJlPgo8c3BhbiBjbGFzcz0icnVieS1jb21tZW50IGNtdCI+IyBGaWxlIGxpYi9hdXRvbWF0ZWl0L3NoZWxsX21hbmFnZXIucmIsIGxpbmUgOTE8L3NwYW4+CiAgPHNwYW4gY2xhc3M9InJ1Ynkta2V5d29yZCBrdyI+ZGVmPC9zcGFuPiA8c3BhbiBjbGFzcz0icnVieS1pZGVudGlmaWVyIj5ta3RlbXBkaXI8L3NwYW4+KDxzcGFuIGNsYXNzPSJydWJ5LWlkZW50aWZpZXIiPm5hbWU8L3NwYW4+PTxzcGFuIGNsYXNzPSJydWJ5LWtleXdvcmQga3ciPm5pbDwvc3Bhbj4sIDxzcGFuIGNsYXNzPSJydWJ5LW9wZXJhdG9yIj4mYW1wOzwvc3Bhbj48c3BhbiBjbGFzcz0icnVieS1pZGVudGlmaWVyIj5ibG9jazwvc3Bhbj4pIDxzcGFuIGNsYXNzPSJydWJ5LWNvbW1lbnQgY210Ij4jIDp5aWVsZHM6IHBhdGg8L3NwYW4+CiAgICA8c3BhbiBjbGFzcz0icnVieS1pZGVudGlmaWVyIj5kaXNwYXRjaDwvc3Bhbj4oPHNwYW4gY2xhc3M9InJ1YnktaWRlbnRpZmllciI+bmFtZTwvc3Bhbj4sIDxzcGFuIGNsYXNzPSJydWJ5LW9wZXJhdG9yIj4mYW1wOzwvc3Bhbj48c3BhbiBjbGFzcz0icnVieS1pZGVudGlmaWVyIj5ibG9jazwvc3Bhbj4pCiAgPHNwYW4gY2xhc3M9InJ1Ynkta2V5d29yZCBrdyI+ZW5kPC9zcGFuPgo8L3ByZT4KICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgICA8L2Rpdj4KCiAgICAgIDxkaXYgaWQ9Im1ldGhvZC1NMDAwMzM1IiBjbGFzcz0ibWV0aG9kLWRldGFpbCI+CiAgICAgICAgPGEgbmFtZT0iTTAwMDMzNSI+PC9hPgoKICAgICAgICA8ZGl2IGNsYXNzPSJtZXRob2QtaGVhZGluZyI+CiAgICAgICAgICA8YSBocmVmPSIjTTAwMDMzNSIgY2xhc3M9Im1ldGhvZC1zaWduYXR1cmUiPgogICAgICAgICAgPHNwYW4gY2xhc3M9Im1ldGhvZC1uYW1lIj5ta3RlbXBkaXJjZDwvc3Bhbj48c3BhbiBjbGFzcz0ibWV0aG9kLWFyZ3MiPihuYW1lPW5pbCkge3xwYXRofCAuLi59PC9zcGFuPgogICAgICAgICAgPC9hPgogICAgICAgIDwvZGl2PgogICAgICAKICAgICAgICA8ZGl2IGNsYXNzPSJtZXRob2QtZGVzY3JpcHRpb24iPgogICAgICAgICAgPHA+ClNhbWUgYXMgPGEgaHJlZj0iU2hlbGxNYW5hZ2VyLmh0bWwjTTAwMDMzNCI+bWt0ZW1wZGlyPC9hPiBidXQgcGVyZm9ybXMgYSA8YQpocmVmPSJTaGVsbE1hbmFnZXIuaHRtbCNNMDAwMzM4Ij5jZDwvYT4gaW50byB0aGUgZGlyZWN0b3J5IGZvciB0aGUgZHVyYXRpb24Kb2YgdGhlIGJsb2NrLgo8L3A+CjxwPgpFeGFtcGxlOgo8L3A+CjxwcmU+CiAgcHV0cyBwd2QgIyA9Jmd0OyAmcXVvdDsvaG9tZS9idWJiYSZxdW90OwogIG1rdGVtcGRpcmNkIGRvIHxwYXRofAogICAgcHV0cyBwYXRoICMgPSZndDsgJnF1b3Q7L3RtcC90ZW1wc3Rlcl9xZUtvN25KazFzJnF1b3Q7CiAgICBwdXRzIHB3ZCAgIyA9Jmd0OyAmcXVvdDsvdG1wL3RlbXBzdGVyX3FlS283bkprMXMmcXVvdDsKICBlbmQKICBwdXRzIEZpbGUuZXhpc3RzPygmcXVvdDsvdG1wL3RlbXBzdGVyX3FlS283bkprMXMmcXVvdDspICMgPSZndDsgZmFsc2UKPC9wcmU+CiAgICAgICAgICA8cD48YSBjbGFzcz0ic291cmNlLXRvZ2dsZSIgaHJlZj0iIyIKICAgICAgICAgICAgb25jbGljaz0idG9nZ2xlQ29kZSgnTTAwMDMzNS1zb3VyY2UnKTtyZXR1cm4gZmFsc2U7Ij5bU291cmNlXTwvYT48L3A+CiAgICAgICAgICA8ZGl2IGNsYXNzPSJtZXRob2Qtc291cmNlLWNvZGUiIGlkPSJNMDAwMzM1LXNvdXJjZSI+CjxwcmU+CjxzcGFuIGNsYXNzPSJydWJ5LWNvbW1lbnQgY210Ij4jIEZpbGUgbGliL2F1dG9tYXRlaXQvc2hlbGxfbWFuYWdlci5yYiwgbGluZSAxMDY8L3NwYW4+CiAgPHNwYW4gY2xhc3M9InJ1Ynkta2V5d29yZCBrdyI+ZGVmPC9zcGFuPiA8c3BhbiBjbGFzcz0icnVieS1pZGVudGlmaWVyIj5ta3RlbXBkaXJjZDwvc3Bhbj4oPHNwYW4gY2xhc3M9InJ1YnktaWRlbnRpZmllciI+bmFtZTwvc3Bhbj49PHNwYW4gY2xhc3M9InJ1Ynkta2V5d29yZCBrdyI+bmlsPC9zcGFuPiwgPHNwYW4gY2xhc3M9InJ1Ynktb3BlcmF0b3IiPiZhbXA7PC9zcGFuPjxzcGFuIGNsYXNzPSJydWJ5LWlkZW50aWZpZXIiPmJsb2NrPC9zcGFuPikgPHNwYW4gY2xhc3M9InJ1YnktY29tbWVudCBjbXQiPiMgOnlpZWxkczogcGF0aDwvc3Bhbj4KICAgIDxzcGFuIGNsYXNzPSJydWJ5LWlkZW50aWZpZXIiPmRpc3BhdGNoPC9zcGFuPig8c3BhbiBjbGFzcz0icnVieS1pZGVudGlmaWVyIj5uYW1lPC9zcGFuPiwgPHNwYW4gY2xhc3M9InJ1Ynktb3BlcmF0b3IiPiZhbXA7PC9zcGFuPjxzcGFuIGNsYXNzPSJydWJ5LWlkZW50aWZpZXIiPmJsb2NrPC9zcGFuPikKICA8c3BhbiBjbGFzcz0icnVieS1rZXl3b3JkIGt3Ij5lbmQ8L3NwYW4+CjwvcHJlPgogICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICAgIDwvZGl2PgoKICAgICAgPGRpdiBpZD0ibWV0aG9kLU0wMDAzNDkiIGNsYXNzPSJtZXRob2QtZGV0YWlsIj4KICAgICAgICA8YSBuYW1lPSJNMDAwMzQ5Ij48L2E+CgogICAgICAgIDxkaXYgY2xhc3M9Im1ldGhvZC1oZWFkaW5nIj4KICAgICAgICAgIDxhIGhyZWY9IiNNMDAwMzQ5IiBjbGFzcz0ibWV0aG9kLXNpZ25hdHVyZSI+CiAgICAgICAgICA8c3BhbiBjbGFzcz0ibWV0aG9kLW5hbWUiPm12PC9zcGFuPjxzcGFuIGNsYXNzPSJtZXRob2QtYXJncyI+KHNvdXJjZXMsIHRhcmdldCk8L3NwYW4+CiAgICAgICAgICA8L2E+CiAgICAgICAgPC9kaXY+CiAgICAgIAogICAgICAgIDxkaXYgY2xhc3M9Im1ldGhvZC1kZXNjcmlwdGlvbiI+CiAgICAgICAgICA8cD4KTW92ZSB0aGUgPHR0PnNvdXJjZXM8L3R0PiB0byB0aGUgPHR0PnRhcmdldDwvdHQ+LiBSZXR1cm5zIGFuIGFycmF5IG9mCnNvdXJjZXMgY29waWVkIG9yIDx0dD5mYWxzZTwvdHQ+IGlmIG5vbmUgb2YgdGhlIHNvdXJjZXMgZXhpc3QuCjwvcD4KICAgICAgICAgIDxwPjxhIGNsYXNzPSJzb3VyY2UtdG9nZ2xlIiBocmVmPSIjIgogICAgICAgICAgICBvbmNsaWNrPSJ0b2dnbGVDb2RlKCdNMDAwMzQ5LXNvdXJjZScpO3JldHVybiBmYWxzZTsiPltTb3VyY2VdPC9hPjwvcD4KICAgICAgICAgIDxkaXYgY2xhc3M9Im1ldGhvZC1zb3VyY2UtY29kZSIgaWQ9Ik0wMDAzNDktc291cmNlIj4KPHByZT4KPHNwYW4gY2xhc3M9InJ1YnktY29tbWVudCBjbXQiPiMgRmlsZSBsaWIvYXV0b21hdGVpdC9zaGVsbF9tYW5hZ2VyLnJiLCBsaW5lIDIxODwvc3Bhbj4KICA8c3BhbiBjbGFzcz0icnVieS1rZXl3b3JkIGt3Ij5kZWY8L3NwYW4+IDxzcGFuIGNsYXNzPSJydWJ5LWlkZW50aWZpZXIiPm12PC9zcGFuPig8c3BhbiBjbGFzcz0icnVieS1pZGVudGlmaWVyIj5zb3VyY2VzPC9zcGFuPiwgPHNwYW4gY2xhc3M9InJ1YnktaWRlbnRpZmllciI+dGFyZ2V0PC9zcGFuPikgPHNwYW4gY2xhc3M9InJ1YnktaWRlbnRpZmllciI+ZGlzcGF0Y2g8L3NwYW4+KDxzcGFuIGNsYXNzPSJydWJ5LWlkZW50aWZpZXIiPnNvdXJjZXM8L3NwYW4+LCA8c3BhbiBjbGFzcz0icnVieS1pZGVudGlmaWVyIj50YXJnZXQ8L3NwYW4+KSA8c3BhbiBjbGFzcz0icnVieS1rZXl3b3JkIGt3Ij5lbmQ8L3NwYW4+CjwvcHJlPgogICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICAgIDwvZGl2PgoKICAgICAgPGRpdiBpZD0ibWV0aG9kLU0wMDAzMjgiIGNsYXNzPSJtZXRob2QtZGV0YWlsIj4KICAgICAgICA8YSBuYW1lPSJNMDAwMzI4Ij48L2E+CgogICAgICAgIDxkaXYgY2xhc3M9Im1ldGhvZC1oZWFkaW5nIj4KICAgICAgICAgIDxhIGhyZWY9IiNNMDAwMzI4IiBjbGFzcz0ibWV0aG9kLXNpZ25hdHVyZSI+CiAgICAgICAgICA8c3BhbiBjbGFzcz0ibWV0aG9kLW5hbWUiPnByb3ZpZGVzX2xpbms/PC9zcGFuPjxzcGFuIGNsYXNzPSJtZXRob2QtYXJncyI+KCk8L3NwYW4+CiAgICAgICAgICA8L2E+CiAgICAgICAgPC9kaXY+CiAgICAgIAogICAgICAgIDxkaXYgY2xhc3M9Im1ldGhvZC1kZXNjcmlwdGlvbiI+CiAgICAgICAgICA8cD4KU2VlIFNoZWxsTWFuYWdlciNwcm92aWRlc19tb2RlPwo8L3A+CiAgICAgICAgICA8cD48YSBjbGFzcz0ic291cmNlLXRvZ2dsZSIgaHJlZj0iIyIKICAgICAgICAgICAgb25jbGljaz0idG9nZ2xlQ29kZSgnTTAwMDMyOC1zb3VyY2UnKTtyZXR1cm4gZmFsc2U7Ij5bU291cmNlXTwvYT48L3A+CiAgICAgICAgICA8ZGl2IGNsYXNzPSJtZXRob2Qtc291cmNlLWNvZGUiIGlkPSJNMDAwMzI4LXNvdXJjZSI+CjxwcmU+CjxzcGFuIGNsYXNzPSJydWJ5LWNvbW1lbnQgY210Ij4jIEZpbGUgbGliL2F1dG9tYXRlaXQvc2hlbGxfbWFuYWdlci5yYiwgbGluZSAyNTwvc3Bhbj4KICA8c3BhbiBjbGFzcz0icnVieS1rZXl3b3JkIGt3Ij5kZWY8L3NwYW4+IDxzcGFuIGNsYXNzPSJydWJ5LWlkZW50aWZpZXIiPnByb3ZpZGVzX2xpbms/PC9zcGFuPigpIDxzcGFuIGNsYXNzPSJydWJ5LWlkZW50aWZpZXIiPmRpc3BhdGNoX3NhZmVseTwvc3Bhbj4gPHNwYW4gY2xhc3M9InJ1Ynkta2V5d29yZCBrdyI+ZW5kPC9zcGFuPgo8L3ByZT4KICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgICA8L2Rpdj4KCiAgICAgIDxkaXYgaWQ9Im1ldGhvZC1NMDAwMzI1IiBjbGFzcz0ibWV0aG9kLWRldGFpbCI+CiAgICAgICAgPGEgbmFtZT0iTTAwMDMyNSI+PC9hPgoKICAgICAgICA8ZGl2IGNsYXNzPSJtZXRob2QtaGVhZGluZyI+CiAgICAgICAgICA8YSBocmVmPSIjTTAwMDMyNSIgY2xhc3M9Im1ldGhvZC1zaWduYXR1cmUiPgogICAgICAgICAgPHNwYW4gY2xhc3M9Im1ldGhvZC1uYW1lIj5wcm92aWRlc19tb2RlPzwvc3Bhbj48c3BhbiBjbGFzcz0ibWV0aG9kLWFyZ3MiPigpPC9zcGFuPgogICAgICAgICAgPC9hPgogICAgICAgIDwvZGl2PgogICAgICAKICAgICAgICA8ZGl2IGNsYXNzPSJtZXRob2QtZGVzY3JpcHRpb24iPgogICAgICAgICAgPHA+ClNlZSBTaGVsbE1hbmFnZXIjcHJvdmlkZXNfbW9kZT8KPC9wPgogICAgICAgICAgPHA+PGEgY2xhc3M9InNvdXJjZS10b2dnbGUiIGhyZWY9IiMiCiAgICAgICAgICAgIG9uY2xpY2s9InRvZ2dsZUNvZGUoJ00wMDAzMjUtc291cmNlJyk7cmV0dXJuIGZhbHNlOyI+W1NvdXJjZV08L2E+PC9wPgogICAgICAgICAgPGRpdiBjbGFzcz0ibWV0aG9kLXNvdXJjZS1jb2RlIiBpZD0iTTAwMDMyNS1zb3VyY2UiPgo8cHJlPgo8c3BhbiBjbGFzcz0icnVieS1jb21tZW50IGNtdCI+IyBGaWxlIGxpYi9hdXRvbWF0ZWl0L3NoZWxsX21hbmFnZXIucmIsIGxpbmUgMTY8L3NwYW4+CiAgPHNwYW4gY2xhc3M9InJ1Ynkta2V5d29yZCBrdyI+ZGVmPC9zcGFuPiA8c3BhbiBjbGFzcz0icnVieS1pZGVudGlmaWVyIj5wcm92aWRlc19tb2RlPzwvc3Bhbj4oKSA8c3BhbiBjbGFzcz0icnVieS1pZGVudGlmaWVyIj5kaXNwYXRjaF9zYWZlbHk8L3NwYW4+IDxzcGFuIGNsYXNzPSJydWJ5LWtleXdvcmQga3ciPmVuZDwvc3Bhbj4KPC9wcmU+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgICAgPC9kaXY+CgogICAgICA8ZGl2IGlkPSJtZXRob2QtTTAwMDMyNiIgY2xhc3M9Im1ldGhvZC1kZXRhaWwiPgogICAgICAgIDxhIG5hbWU9Ik0wMDAzMjYiPjwvYT4KCiAgICAgICAgPGRpdiBjbGFzcz0ibWV0aG9kLWhlYWRpbmciPgogICAgICAgICAgPGEgaHJlZj0iI00wMDAzMjYiIGNsYXNzPSJtZXRob2Qtc2lnbmF0dXJlIj4KICAgICAgICAgIDxzcGFuIGNsYXNzPSJtZXRob2QtbmFtZSI+cHJvdmlkZXNfb3duZXJzaGlwPzwvc3Bhbj48c3BhbiBjbGFzcz0ibWV0aG9kLWFyZ3MiPigpPC9zcGFuPgogICAgICAgICAgPC9hPgogICAgICAgIDwvZGl2PgogICAgICAKICAgICAgICA8ZGl2IGNsYXNzPSJtZXRob2QtZGVzY3JpcHRpb24iPgogICAgICAgICAgPHA+ClNlZSBTaGVsbE1hbmFnZXIjcHJvdmlkZXNfbW9kZT8KPC9wPgogICAgICAgICAgPHA+PGEgY2xhc3M9InNvdXJjZS10b2dnbGUiIGhyZWY9IiMiCiAgICAgICAgICAgIG9uY2xpY2s9InRvZ2dsZUNvZGUoJ00wMDAzMjYtc291cmNlJyk7cmV0dXJuIGZhbHNlOyI+W1NvdXJjZV08L2E+PC9wPgogICAgICAgICAgPGRpdiBjbGFzcz0ibWV0aG9kLXNvdXJjZS1jb2RlIiBpZD0iTTAwMDMyNi1zb3VyY2UiPgo8cHJlPgo8c3BhbiBjbGFzcz0icnVieS1jb21tZW50IGNtdCI+IyBGaWxlIGxpYi9hdXRvbWF0ZWl0L3NoZWxsX21hbmFnZXIucmIsIGxpbmUgMTk8L3NwYW4+CiAgPHNwYW4gY2xhc3M9InJ1Ynkta2V5d29yZCBrdyI+ZGVmPC9zcGFuPiA8c3BhbiBjbGFzcz0icnVieS1pZGVudGlmaWVyIj5wcm92aWRlc19vd25lcnNoaXA/PC9zcGFuPigpIDxzcGFuIGNsYXNzPSJydWJ5LWlkZW50aWZpZXIiPmRpc3BhdGNoX3NhZmVseTwvc3Bhbj4gPHNwYW4gY2xhc3M9InJ1Ynkta2V5d29yZCBrdyI+ZW5kPC9zcGFuPgo8L3ByZT4KICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgICA8L2Rpdj4KCiAgICAgIDxkaXYgaWQ9Im1ldGhvZC1NMDAwMzI3IiBjbGFzcz0ibWV0aG9kLWRldGFpbCI+CiAgICAgICAgPGEgbmFtZT0iTTAwMDMyNyI+PC9hPgoKICAgICAgICA8ZGl2IGNsYXNzPSJtZXRob2QtaGVhZGluZyI+CiAgICAgICAgICA8YSBocmVmPSIjTTAwMDMyNyIgY2xhc3M9Im1ldGhvZC1zaWduYXR1cmUiPgogICAgICAgICAgPHNwYW4gY2xhc3M9Im1ldGhvZC1uYW1lIj5wcm92aWRlc19zeW1saW5rPzwvc3Bhbj48c3BhbiBjbGFzcz0ibWV0aG9kLWFyZ3MiPigpPC9zcGFuPgogICAgICAgICAgPC9hPgogICAgICAgIDwvZGl2PgogICAgICAKICAgICAgICA8ZGl2IGNsYXNzPSJtZXRob2QtZGVzY3JpcHRpb24iPgogICAgICAgICAgPHA+ClNlZSBTaGVsbE1hbmFnZXIjcHJvdmlkZXNfbW9kZT8KPC9wPgogICAgICAgICAgPHA+PGEgY2xhc3M9InNvdXJjZS10b2dnbGUiIGhyZWY9IiMiCiAgICAgICAgICAgIG9uY2xpY2s9InRvZ2dsZUNvZGUoJ00wMDAzMjctc291cmNlJyk7cmV0dXJuIGZhbHNlOyI+W1NvdXJjZV08L2E+PC9wPgogICAgICAgICAgPGRpdiBjbGFzcz0ibWV0aG9kLXNvdXJjZS1jb2RlIiBpZD0iTTAwMDMyNy1zb3VyY2UiPgo8cHJlPgo8c3BhbiBjbGFzcz0icnVieS1jb21tZW50IGNtdCI+IyBGaWxlIGxpYi9hdXRvbWF0ZWl0L3NoZWxsX21hbmFnZXIucmIsIGxpbmUgMjI8L3NwYW4+CiAgPHNwYW4gY2xhc3M9InJ1Ynkta2V5d29yZCBrdyI+ZGVmPC9zcGFuPiA8c3BhbiBjbGFzcz0icnVieS1pZGVudGlmaWVyIj5wcm92aWRlc19zeW1saW5rPzwvc3Bhbj4oKSA8c3BhbiBjbGFzcz0icnVieS1pZGVudGlmaWVyIj5kaXNwYXRjaF9zYWZlbHk8L3NwYW4+IDxzcGFuIGNsYXNzPSJydWJ5LWtleXdvcmQga3ciPmVuZDwvc3Bhbj4KPC9wcmU+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgICAgPC9kaXY+CgogICAgICA8ZGl2IGlkPSJtZXRob2QtTTAwMDMzOSIgY2xhc3M9Im1ldGhvZC1kZXRhaWwiPgogICAgICAgIDxhIG5hbWU9Ik0wMDAzMzkiPjwvYT4KCiAgICAgICAgPGRpdiBjbGFzcz0ibWV0aG9kLWhlYWRpbmciPgogICAgICAgICAgPGEgaHJlZj0iI00wMDAzMzkiIGNsYXNzPSJtZXRob2Qtc2lnbmF0dXJlIj4KICAgICAgICAgIDxzcGFuIGNsYXNzPSJtZXRob2QtbmFtZSI+cHdkPC9zcGFuPjxzcGFuIGNsYXNzPSJtZXRob2QtYXJncyI+KCk8L3NwYW4+CiAgICAgICAgICA8L2E+CiAgICAgICAgPC9kaXY+CiAgICAgIAogICAgICAgIDxkaXYgY2xhc3M9Im1ldGhvZC1kZXNjcmlwdGlvbiI+CiAgICAgICAgICA8cD4KUmV0dXJucyB0aGUgY3VycmVudCBkaXJlY3RvcnkuCjwvcD4KICAgICAgICAgIDxwPjxhIGNsYXNzPSJzb3VyY2UtdG9nZ2xlIiBocmVmPSIjIgogICAgICAgICAgICBvbmNsaWNrPSJ0b2dnbGVDb2RlKCdNMDAwMzM5LXNvdXJjZScpO3JldHVybiBmYWxzZTsiPltTb3VyY2VdPC9hPjwvcD4KICAgICAgICAgIDxkaXYgY2xhc3M9Im1ldGhvZC1zb3VyY2UtY29kZSIgaWQ9Ik0wMDAzMzktc291cmNlIj4KPHByZT4KPHNwYW4gY2xhc3M9InJ1YnktY29tbWVudCBjbXQiPiMgRmlsZSBsaWIvYXV0b21hdGVpdC9zaGVsbF9tYW5hZ2VyLnJiLCBsaW5lIDE0Njwvc3Bhbj4KICA8c3BhbiBjbGFzcz0icnVieS1rZXl3b3JkIGt3Ij5kZWY8L3NwYW4+IDxzcGFuIGNsYXNzPSJydWJ5LWlkZW50aWZpZXIiPnB3ZDwvc3Bhbj4oKSA8c3BhbiBjbGFzcz0icnVieS1pZGVudGlmaWVyIj5kaXNwYXRjaDwvc3Bhbj4oKSA8c3BhbiBjbGFzcz0icnVieS1rZXl3b3JkIGt3Ij5lbmQ8L3NwYW4+CjwvcHJlPgogICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICAgIDwvZGl2PgoKICAgICAgPGRpdiBpZD0ibWV0aG9kLU0wMDAzNTAiIGNsYXNzPSJtZXRob2QtZGV0YWlsIj4KICAgICAgICA8YSBuYW1lPSJNMDAwMzUwIj48L2E+CgogICAgICAgIDxkaXYgY2xhc3M9Im1ldGhvZC1oZWFkaW5nIj4KICAgICAgICAgIDxhIGhyZWY9IiNNMDAwMzUwIiBjbGFzcz0ibWV0aG9kLXNpZ25hdHVyZSI+CiAgICAgICAgICA8c3BhbiBjbGFzcz0ibWV0aG9kLW5hbWUiPnJtPC9zcGFuPjxzcGFuIGNsYXNzPSJtZXRob2QtYXJncyI+KHRhcmdldHMsIG9wdHM9e30pPC9zcGFuPgogICAgICAgICAgPC9hPgogICAgICAgIDwvZGl2PgogICAgICAKICAgICAgICA8ZGl2IGNsYXNzPSJtZXRob2QtZGVzY3JpcHRpb24iPgogICAgICAgICAgPHA+ClJlbW92ZSB0aGUgPHR0PnRhcmdldHM8L3R0Pi4gUmV0dXJucyBhIGxpc3Qgb2YgdGFyZ2V0cyByZW1vdmVkIG9yCjx0dD5mYWxzZTwvdHQ+IGlmIG5vbmUgb2YgdGhlbSBleGlzdC4KPC9wPgogICAgICAgICAgPHA+PGEgY2xhc3M9InNvdXJjZS10b2dnbGUiIGhyZWY9IiMiCiAgICAgICAgICAgIG9uY2xpY2s9InRvZ2dsZUNvZGUoJ00wMDAzNTAtc291cmNlJyk7cmV0dXJuIGZhbHNlOyI+W1NvdXJjZV08L2E+PC9wPgogICAgICAgICAgPGRpdiBjbGFzcz0ibWV0aG9kLXNvdXJjZS1jb2RlIiBpZD0iTTAwMDM1MC1zb3VyY2UiPgo8cHJlPgo8c3BhbiBjbGFzcz0icnVieS1jb21tZW50IGNtdCI+IyBGaWxlIGxpYi9hdXRvbWF0ZWl0L3NoZWxsX21hbmFnZXIucmIsIGxpbmUgMjIyPC9zcGFuPgogIDxzcGFuIGNsYXNzPSJydWJ5LWtleXdvcmQga3ciPmRlZjwvc3Bhbj4gPHNwYW4gY2xhc3M9InJ1YnktaWRlbnRpZmllciI+cm08L3NwYW4+KDxzcGFuIGNsYXNzPSJydWJ5LWlkZW50aWZpZXIiPnRhcmdldHM8L3NwYW4+LCA8c3BhbiBjbGFzcz0icnVieS1pZGVudGlmaWVyIj5vcHRzPC9zcGFuPj17fSkgPHNwYW4gY2xhc3M9InJ1YnktaWRlbnRpZmllciI+ZGlzcGF0Y2g8L3NwYW4+KDxzcGFuIGNsYXNzPSJydWJ5LWlkZW50aWZpZXIiPnRhcmdldHM8L3NwYW4+LCA8c3BhbiBjbGFzcz0icnVieS1pZGVudGlmaWVyIj5vcHRzPC9zcGFuPikgPHNwYW4gY2xhc3M9InJ1Ynkta2V5d29yZCBrdyI+ZW5kPC9zcGFuPgo8L3ByZT4KICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgICA8L2Rpdj4KCiAgICAgIDxkaXYgaWQ9Im1ldGhvZC1NMDAwMzUxIiBjbGFzcz0ibWV0aG9kLWRldGFpbCI+CiAgICAgICAgPGEgbmFtZT0iTTAwMDM1MSI+PC9hPgoKICAgICAgICA8ZGl2IGNsYXNzPSJtZXRob2QtaGVhZGluZyI+CiAgICAgICAgICA8YSBocmVmPSIjTTAwMDM1MSIgY2xhc3M9Im1ldGhvZC1zaWduYXR1cmUiPgogICAgICAgICAgPHNwYW4gY2xhc3M9Im1ldGhvZC1uYW1lIj5ybV9yPC9zcGFuPjxzcGFuIGNsYXNzPSJtZXRob2QtYXJncyI+KHRhcmdldHMsIG9wdHM9e30pPC9zcGFuPgogICAgICAgICAgPC9hPgogICAgICAgIDwvZGl2PgogICAgICAKICAgICAgICA8ZGl2IGNsYXNzPSJtZXRob2QtZGVzY3JpcHRpb24iPgogICAgICAgICAgPHA+ClJlbW92ZSB0aGUgPHR0PnRhcmdldHM8L3R0PiByZWN1cnNpdmVseS4gUmV0dXJucyBhIGxpc3Qgb2YgdGFyZ2V0cyByZW1vdmVkCm9yIDx0dD5mYWxzZTwvdHQ+IGlmIG5vbmUgb2YgdGhlbSBleGlzdC4KPC9wPgogICAgICAgICAgPHA+PGEgY2xhc3M9InNvdXJjZS10b2dnbGUiIGhyZWY9IiMiCiAgICAgICAgICAgIG9uY2xpY2s9InRvZ2dsZUNvZGUoJ00wMDAzNTEtc291cmNlJyk7cmV0dXJuIGZhbHNlOyI+W1NvdXJjZV08L2E+PC9wPgogICAgICAgICAgPGRpdiBjbGFzcz0ibWV0aG9kLXNvdXJjZS1jb2RlIiBpZD0iTTAwMDM1MS1zb3VyY2UiPgo8cHJlPgo8c3BhbiBjbGFzcz0icnVieS1jb21tZW50IGNtdCI+IyBGaWxlIGxpYi9hdXRvbWF0ZWl0L3NoZWxsX21hbmFnZXIucmIsIGxpbmUgMjI2PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJydWJ5LWtleXdvcmQga3ciPmRlZjwvc3Bhbj4gPHNwYW4gY2xhc3M9InJ1YnktaWRlbnRpZmllciI+cm1fcjwvc3Bhbj4oPHNwYW4gY2xhc3M9InJ1YnktaWRlbnRpZmllciI+dGFyZ2V0czwvc3Bhbj4sIDxzcGFuIGNsYXNzPSJydWJ5LWlkZW50aWZpZXIiPm9wdHM8L3NwYW4+PXt9KSA8c3BhbiBjbGFzcz0icnVieS1pZGVudGlmaWVyIj5kaXNwYXRjaDwvc3Bhbj4oPHNwYW4gY2xhc3M9InJ1YnktaWRlbnRpZmllciI+dGFyZ2V0czwvc3Bhbj4sIDxzcGFuIGNsYXNzPSJydWJ5LWlkZW50aWZpZXIiPm9wdHM8L3NwYW4+KSA8c3BhbiBjbGFzcz0icnVieS1rZXl3b3JkIGt3Ij5lbmQ8L3NwYW4+CjwvcHJlPgogICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICAgIDwvZGl2PgoKICAgICAgPGRpdiBpZD0ibWV0aG9kLU0wMDAzNTIiIGNsYXNzPSJtZXRob2QtZGV0YWlsIj4KICAgICAgICA8YSBuYW1lPSJNMDAwMzUyIj48L2E+CgogICAgICAgIDxkaXYgY2xhc3M9Im1ldGhvZC1oZWFkaW5nIj4KICAgICAgICAgIDxhIGhyZWY9IiNNMDAwMzUyIiBjbGFzcz0ibWV0aG9kLXNpZ25hdHVyZSI+CiAgICAgICAgICA8c3BhbiBjbGFzcz0ibWV0aG9kLW5hbWUiPnJtX3JmPC9zcGFuPjxzcGFuIGNsYXNzPSJtZXRob2QtYXJncyI+KHRhcmdldHMsIG9wdHM9e30pPC9zcGFuPgogICAgICAgICAgPC9hPgogICAgICAgIDwvZGl2PgogICAgICAKICAgICAgICA8ZGl2IGNsYXNzPSJtZXRob2QtZGVzY3JpcHRpb24iPgogICAgICAgICAgPHA+ClJlbW92ZSB0aGUgPHR0PnRhcmdldHM8L3R0PiByZWN1cnNpdmVseSBhbmQgZm9yY2VmdWxseS4gUmV0dXJucyBhIGxpc3Qgb2YKdGFyZ2V0cyByZW1vdmVkIG9yIDx0dD5mYWxzZTwvdHQ+IGlmIG5vbmUgb2YgdGhlbSBleGlzdC4KPC9wPgogICAgICAgICAgPHA+PGEgY2xhc3M9InNvdXJjZS10b2dnbGUiIGhyZWY9IiMiCiAgICAgICAgICAgIG9uY2xpY2s9InRvZ2dsZUNvZGUoJ00wMDAzNTItc291cmNlJyk7cmV0dXJuIGZhbHNlOyI+W1NvdXJjZV08L2E+PC9wPgogICAgICAgICAgPGRpdiBjbGFzcz0ibWV0aG9kLXNvdXJjZS1jb2RlIiBpZD0iTTAwMDM1Mi1zb3VyY2UiPgo8cHJlPgo8c3BhbiBjbGFzcz0icnVieS1jb21tZW50IGNtdCI+IyBGaWxlIGxpYi9hdXRvbWF0ZWl0L3NoZWxsX21hbmFnZXIucmIsIGxpbmUgMjMwPC9zcGFuPgogIDxzcGFuIGNsYXNzPSJydWJ5LWtleXdvcmQga3ciPmRlZjwvc3Bhbj4gPHNwYW4gY2xhc3M9InJ1YnktaWRlbnRpZmllciI+cm1fcmY8L3NwYW4+KDxzcGFuIGNsYXNzPSJydWJ5LWlkZW50aWZpZXIiPnRhcmdldHM8L3NwYW4+LCA8c3BhbiBjbGFzcz0icnVieS1pZGVudGlmaWVyIj5vcHRzPC9zcGFuPj17fSkgPHNwYW4gY2xhc3M9InJ1YnktaWRlbnRpZmllciI+ZGlzcGF0Y2g8L3NwYW4+KDxzcGFuIGNsYXNzPSJydWJ5LWlkZW50aWZpZXIiPnRhcmdldHM8L3NwYW4+LCA8c3BhbiBjbGFzcz0icnVieS1pZGVudGlmaWVyIj5vcHRzPC9zcGFuPikgPHNwYW4gY2xhc3M9InJ1Ynkta2V5d29yZCBrdyI+ZW5kPC9zcGFuPgo8L3ByZT4KICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgICA8L2Rpdj4KCiAgICAgIDxkaXYgaWQ9Im1ldGhvZC1NMDAwMzQyIiBjbGFzcz0ibWV0aG9kLWRldGFpbCI+CiAgICAgICAgPGEgbmFtZT0iTTAwMDM0MiI+PC9hPgoKICAgICAgICA8ZGl2IGNsYXNzPSJtZXRob2QtaGVhZGluZyI+CiAgICAgICAgICA8YSBocmVmPSIjTTAwMDM0MiIgY2xhc3M9Im1ldGhvZC1zaWduYXR1cmUiPgogICAgICAgICAgPHNwYW4gY2xhc3M9Im1ldGhvZC1uYW1lIj5ybWRpcjwvc3Bhbj48c3BhbiBjbGFzcz0ibWV0aG9kLWFyZ3MiPihkaXJzKTwvc3Bhbj4KICAgICAgICAgIDwvYT4KICAgICAgICA8L2Rpdj4KICAgICAgCiAgICAgICAgPGRpdiBjbGFzcz0ibWV0aG9kLWRlc2NyaXB0aW9uIj4KICAgICAgICAgIDxwPgpSZW1vdmUgYSBkaXJlY3Rvcnkgb3IgZGlyZWN0b3JpZXMuIFRoZSBkaXJlY3RvcmllcyBtdXN0IGJlIGVtcHR5IG9yIGFuCmV4Y2VwdGlvbiBpcyB0aHJvd24uIFJldHVybnMgdGhlIGRpcmVjdG9yaWVzIHJlbW92ZWQgb3IgPHR0PmZhbHNlPC90dD4gaWYKbm9uZSBvZiB0aGUgZGlyZWN0b3JpZXMgZXhpc3QuCjwvcD4KICAgICAgICAgIDxwPjxhIGNsYXNzPSJzb3VyY2UtdG9nZ2xlIiBocmVmPSIjIgogICAgICAgICAgICBvbmNsaWNrPSJ0b2dnbGVDb2RlKCdNMDAwMzQyLXNvdXJjZScpO3JldHVybiBmYWxzZTsiPltTb3VyY2VdPC9hPjwvcD4KICAgICAgICAgIDxkaXYgY2xhc3M9Im1ldGhvZC1zb3VyY2UtY29kZSIgaWQ9Ik0wMDAzNDItc291cmNlIj4KPHByZT4KPHNwYW4gY2xhc3M9InJ1YnktY29tbWVudCBjbXQiPiMgRmlsZSBsaWIvYXV0b21hdGVpdC9zaGVsbF9tYW5hZ2VyLnJiLCBsaW5lIDE3OTwvc3Bhbj4KICA8c3BhbiBjbGFzcz0icnVieS1rZXl3b3JkIGt3Ij5kZWY8L3NwYW4+IDxzcGFuIGNsYXNzPSJydWJ5LWlkZW50aWZpZXIiPnJtZGlyPC9zcGFuPig8c3BhbiBjbGFzcz0icnVieS1pZGVudGlmaWVyIj5kaXJzPC9zcGFuPikgPHNwYW4gY2xhc3M9InJ1YnktaWRlbnRpZmllciI+ZGlzcGF0Y2g8L3NwYW4+KDxzcGFuIGNsYXNzPSJydWJ5LWlkZW50aWZpZXIiPmRpcnM8L3NwYW4+KSA8c3BhbiBjbGFzcz0icnVieS1rZXl3b3JkIGt3Ij5lbmQ8L3NwYW4+CjwvcHJlPgogICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICAgIDwvZGl2PgoKICAgICAgPGRpdiBpZD0ibWV0aG9kLU0wMDAzMzAiIGNsYXNzPSJtZXRob2QtZGV0YWlsIj4KICAgICAgICA8YSBuYW1lPSJNMDAwMzMwIj48L2E+CgogICAgICAgIDxkaXYgY2xhc3M9Im1ldGhvZC1oZWFkaW5nIj4KICAgICAgICAgIDxhIGhyZWY9IiNNMDAwMzMwIiBjbGFzcz0ibWV0aG9kLXNpZ25hdHVyZSI+CiAgICAgICAgICA8c3BhbiBjbGFzcz0ibWV0aG9kLW5hbWUiPnNoPC9zcGFuPjxzcGFuIGNsYXNzPSJtZXRob2QtYXJncyI+KCpjb21tYW5kcyk8L3NwYW4+CiAgICAgICAgICA8L2E+CiAgICAgICAgPC9kaXY+CiAgICAgIAogICAgICAgIDxkaXYgY2xhc3M9Im1ldGhvZC1kZXNjcmlwdGlvbiI+CiAgICAgICAgICA8cD4KRXhlY3V0ZSBhIHNoZWxsIGNvbW1hbmQuCjwvcD4KICAgICAgICAgIDxwPjxhIGNsYXNzPSJzb3VyY2UtdG9nZ2xlIiBocmVmPSIjIgogICAgICAgICAgICBvbmNsaWNrPSJ0b2dnbGVDb2RlKCdNMDAwMzMwLXNvdXJjZScpO3JldHVybiBmYWxzZTsiPltTb3VyY2VdPC9hPjwvcD4KICAgICAgICAgIDxkaXYgY2xhc3M9Im1ldGhvZC1zb3VyY2UtY29kZSIgaWQ9Ik0wMDAzMzAtc291cmNlIj4KPHByZT4KPHNwYW4gY2xhc3M9InJ1YnktY29tbWVudCBjbXQiPiMgRmlsZSBsaWIvYXV0b21hdGVpdC9zaGVsbF9tYW5hZ2VyLnJiLCBsaW5lIDU0PC9zcGFuPgogIDxzcGFuIGNsYXNzPSJydWJ5LWtleXdvcmQga3ciPmRlZjwvc3Bhbj4gPHNwYW4gY2xhc3M9InJ1YnktaWRlbnRpZmllciI+c2g8L3NwYW4+KDxzcGFuIGNsYXNzPSJydWJ5LW9wZXJhdG9yIj4qPC9zcGFuPjxzcGFuIGNsYXNzPSJydWJ5LWlkZW50aWZpZXIiPmNvbW1hbmRzPC9zcGFuPikgPHNwYW4gY2xhc3M9InJ1YnktaWRlbnRpZmllciI+ZGlzcGF0Y2g8L3NwYW4+KDxzcGFuIGNsYXNzPSJydWJ5LW9wZXJhdG9yIj4qPC9zcGFuPjxzcGFuIGNsYXNzPSJydWJ5LWlkZW50aWZpZXIiPmNvbW1hbmRzPC9zcGFuPikgPHNwYW4gY2xhc3M9InJ1Ynkta2V5d29yZCBrdyI+ZW5kPC9zcGFuPgo8L3ByZT4KICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgICA8L2Rpdj4KCiAgICAgIDxkaXYgaWQ9Im1ldGhvZC1NMDAwMzU4IiBjbGFzcz0ibWV0aG9kLWRldGFpbCI+CiAgICAgICAgPGEgbmFtZT0iTTAwMDM1OCI+PC9hPgoKICAgICAgICA8ZGl2IGNsYXNzPSJtZXRob2QtaGVhZGluZyI+CiAgICAgICAgICA8YSBocmVmPSIjTTAwMDM1OCIgY2xhc3M9Im1ldGhvZC1zaWduYXR1cmUiPgogICAgICAgICAgPHNwYW4gY2xhc3M9Im1ldGhvZC1uYW1lIj50b3VjaDwvc3Bhbj48c3BhbiBjbGFzcz0ibWV0aG9kLWFyZ3MiPih0YXJnZXRzLCBvcHRzPXt9KTwvc3Bhbj4KICAgICAgICAgIDwvYT4KICAgICAgICA8L2Rpdj4KICAgICAgCiAgICAgICAgPGRpdiBjbGFzcz0ibWV0aG9kLWRlc2NyaXB0aW9uIj4KICAgICAgICAgIDxwPgpDcmVhdGUgdGhlIDx0dD50YXJnZXRzPC90dD4gYXMgZmlsZXMgaWYgbmVlZGVkIGFuZCB1cGRhdGUgdGhlaXIKbW9kaWZpY2F0aW9uIHRpbWUuIFVubGlrZSBtb3N0IG90aGVyIGNvbW1hbmRzIHByb3ZpZGVkIGJ5IDxhCmhyZWY9IlNoZWxsTWFuYWdlci5odG1sIj5TaGVsbE1hbmFnZXI8L2E+LCB0aGlzIG9uZSB3aWxsIGFsd2F5cyBtb2RpZnkgdGhlCnRhcmdldHMuIFJldHVybnMgYW4gYXJyYXkgb2YgdGFyZ2V0cyBtb2RpZmllZC4KPC9wPgo8cD4KT3B0aW9uczoKPC9wPgo8dWw+CjxsaT46bGlrZSAmIzgyMTI7IFRvdWNoIHRoZSB0YXJnZXRzIGxpa2UgdGhpcyBmaWxlLiBEZWZhdWx0cyB0byBub25lLgoKPC9saT4KPGxpPjpzdGFtcCAmIzgyMTI7IFNldCB0aGUgdGFyZ2V0cyB0byB0aGUgc3BlY2lmaWVkIHRpbWVzdGFtcC4gRGVmYXVsdHMgdG8KVGltZS5ub3cuCgo8L2xpPgo8L3VsPgogICAgICAgICAgPHA+PGEgY2xhc3M9InNvdXJjZS10b2dnbGUiIGhyZWY9IiMiCiAgICAgICAgICAgIG9uY2xpY2s9InRvZ2dsZUNvZGUoJ00wMDAzNTgtc291cmNlJyk7cmV0dXJuIGZhbHNlOyI+W1NvdXJjZV08L2E+PC9wPgogICAgICAgICAgPGRpdiBjbGFzcz0ibWV0aG9kLXNvdXJjZS1jb2RlIiBpZD0iTTAwMDM1OC1zb3VyY2UiPgo8cHJlPgo8c3BhbiBjbGFzcz0icnVieS1jb21tZW50IGNtdCI+IyBGaWxlIGxpYi9hdXRvbWF0ZWl0L3NoZWxsX21hbmFnZXIucmIsIGxpbmUgMjYzPC9zcGFuPgogIDxzcGFuIGNsYXNzPSJydWJ5LWtleXdvcmQga3ciPmRlZjwvc3Bhbj4gPHNwYW4gY2xhc3M9InJ1YnktaWRlbnRpZmllciI+dG91Y2g8L3NwYW4+KDxzcGFuIGNsYXNzPSJydWJ5LWlkZW50aWZpZXIiPnRhcmdldHM8L3NwYW4+LCA8c3BhbiBjbGFzcz0icnVieS1pZGVudGlmaWVyIj5vcHRzPC9zcGFuPj17fSkgPHNwYW4gY2xhc3M9InJ1YnktaWRlbnRpZmllciI+ZGlzcGF0Y2g8L3NwYW4+KDxzcGFuIGNsYXNzPSJydWJ5LWlkZW50aWZpZXIiPnRhcmdldHM8L3NwYW4+LCA8c3BhbiBjbGFzcz0icnVieS1pZGVudGlmaWVyIj5vcHRzPC9zcGFuPikgPHNwYW4gY2xhc3M9InJ1Ynkta2V5d29yZCBrdyI+ZW5kPC9zcGFuPgo8L3ByZT4KICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgICA8L2Rpdj4KCiAgICAgIDxkaXYgaWQ9Im1ldGhvZC1NMDAwMzM3IiBjbGFzcz0ibWV0aG9kLWRldGFpbCI+CiAgICAgICAgPGEgbmFtZT0iTTAwMDMzNyI+PC9hPgoKICAgICAgICA8ZGl2IGNsYXNzPSJtZXRob2QtaGVhZGluZyI+CiAgICAgICAgICA8YSBocmVmPSIjTTAwMDMzNyIgY2xhc3M9Im1ldGhvZC1zaWduYXR1cmUiPgogICAgICAgICAgPHNwYW4gY2xhc3M9Im1ldGhvZC1uYW1lIj51bWFzazwvc3Bhbj48c3BhbiBjbGFzcz0ibWV0aG9kLWFyZ3MiPihtb2RlPW5pbCwgJmFtcDtibG9jayk8L3NwYW4+CiAgICAgICAgICA8L2E+CiAgICAgICAgPC9kaXY+CiAgICAgIAogICAgICAgIDxkaXYgY2xhc3M9Im1ldGhvZC1kZXNjcmlwdGlvbiI+CiAgICAgICAgICA8cD4KU2V0IHRoZSA8YSBocmVmPSJTaGVsbE1hbmFnZXIuaHRtbCNNMDAwMzM3Ij51bWFzazwvYT4gdG8gPHR0Pm1vZGU8L3R0Pi4gSWYKZ2l2ZW4gYSBibG9jaywgY2hhbmdlcyB0aGUgPGEgaHJlZj0iU2hlbGxNYW5hZ2VyLmh0bWwjTTAwMDMzNyI+dW1hc2s8L2E+Cm9ubHkgZm9yIHRoZSBkdXJhdGlvbiBvZiB0aGUgYmxvY2sgYW5kIGNoYW5nZXMgaXQgYmFjayB0byBpdHMgcHJldmlvdXMKc2V0dGluZyBhdCB0aGUgZW5kLgo8L3A+CiAgICAgICAgICA8cD48YSBjbGFzcz0ic291cmNlLXRvZ2dsZSIgaHJlZj0iIyIKICAgICAgICAgICAgb25jbGljaz0idG9nZ2xlQ29kZSgnTTAwMDMzNy1zb3VyY2UnKTtyZXR1cm4gZmFsc2U7Ij5bU291cmNlXTwvYT48L3A+CiAgICAgICAgICA8ZGl2IGNsYXNzPSJtZXRob2Qtc291cmNlLWNvZGUiIGlkPSJNMDAwMzM3LXNvdXJjZSI+CjxwcmU+CjxzcGFuIGNsYXNzPSJydWJ5LWNvbW1lbnQgY210Ij4jIEZpbGUgbGliL2F1dG9tYXRlaXQvc2hlbGxfbWFuYWdlci5yYiwgbGluZSAxMzI8L3NwYW4+CiAgPHNwYW4gY2xhc3M9InJ1Ynkta2V5d29yZCBrdyI+ZGVmPC9zcGFuPiA8c3BhbiBjbGFzcz0icnVieS1pZGVudGlmaWVyIj51bWFzazwvc3Bhbj4oPHNwYW4gY2xhc3M9InJ1YnktaWRlbnRpZmllciI+bW9kZTwvc3Bhbj49PHNwYW4gY2xhc3M9InJ1Ynkta2V5d29yZCBrdyI+bmlsPC9zcGFuPiwgPHNwYW4gY2xhc3M9InJ1Ynktb3BlcmF0b3IiPiZhbXA7PC9zcGFuPjxzcGFuIGNsYXNzPSJydWJ5LWlkZW50aWZpZXIiPmJsb2NrPC9zcGFuPikgPHNwYW4gY2xhc3M9InJ1YnktaWRlbnRpZmllciI+ZGlzcGF0Y2g8L3NwYW4+KDxzcGFuIGNsYXNzPSJydWJ5LWlkZW50aWZpZXIiPm1vZGU8L3NwYW4+LCA8c3BhbiBjbGFzcz0icnVieS1vcGVyYXRvciI+JmFtcDs8L3NwYW4+PHNwYW4gY2xhc3M9InJ1YnktaWRlbnRpZmllciI+YmxvY2s8L3NwYW4+KSA8c3BhbiBjbGFzcz0icnVieS1rZXl3b3JkIGt3Ij5lbmQ8L3NwYW4+CjwvcHJlPgogICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICAgIDwvZGl2PgoKICAgICAgPGRpdiBpZD0ibWV0aG9kLU0wMDAzMzEiIGNsYXNzPSJtZXRob2QtZGV0YWlsIj4KICAgICAgICA8YSBuYW1lPSJNMDAwMzMxIj48L2E+CgogICAgICAgIDxkaXYgY2xhc3M9Im1ldGhvZC1oZWFkaW5nIj4KICAgICAgICAgIDxhIGhyZWY9IiNNMDAwMzMxIiBjbGFzcz0ibWV0aG9kLXNpZ25hdHVyZSI+CiAgICAgICAgICA8c3BhbiBjbGFzcz0ibWV0aG9kLW5hbWUiPndoaWNoPC9zcGFuPjxzcGFuIGNsYXNzPSJtZXRob2QtYXJncyI+KGNvbW1hbmQpPC9zcGFuPgogICAgICAgICAgPC9hPgogICAgICAgIDwvZGl2PgogICAgICAKICAgICAgICA8ZGl2IGNsYXNzPSJtZXRob2QtZGVzY3JpcHRpb24iPgogICAgICAgICAgPHA+CldoYXQgaXMgdGhlIHBhdGggZm9yIHRoaXMgY29tbWFuZD8gUmV0dXJucyA8dHQ+bmlsPC90dD4gaWYgY29tbWFuZAppc24mIzgyMTY7dCBmb3VuZC4KPC9wPgo8cD4KRXhhbXBsZToKPC9wPgo8cHJlPgogIHdoaWNoKCZxdW90O2xzJnF1b3Q7KSAjID0mZ3Q7ICZxdW90Oy9iaW4vbHMmcXVvdDsKPC9wcmU+CiAgICAgICAgICA8cD48YSBjbGFzcz0ic291cmNlLXRvZ2dsZSIgaHJlZj0iIyIKICAgICAgICAgICAgb25jbGljaz0idG9nZ2xlQ29kZSgnTTAwMDMzMS1zb3VyY2UnKTtyZXR1cm4gZmFsc2U7Ij5bU291cmNlXTwvYT48L3A+CiAgICAgICAgICA8ZGl2IGNsYXNzPSJtZXRob2Qtc291cmNlLWNvZGUiIGlkPSJNMDAwMzMxLXNvdXJjZSI+CjxwcmU+CjxzcGFuIGNsYXNzPSJydWJ5LWNvbW1lbnQgY210Ij4jIEZpbGUgbGliL2F1dG9tYXRlaXQvc2hlbGxfbWFuYWdlci5yYiwgbGluZSA2MDwvc3Bhbj4KICA8c3BhbiBjbGFzcz0icnVieS1rZXl3b3JkIGt3Ij5kZWY8L3NwYW4+IDxzcGFuIGNsYXNzPSJydWJ5LWlkZW50aWZpZXIiPndoaWNoPC9zcGFuPig8c3BhbiBjbGFzcz0icnVieS1pZGVudGlmaWVyIj5jb21tYW5kPC9zcGFuPikgPHNwYW4gY2xhc3M9InJ1YnktaWRlbnRpZmllciI+ZGlzcGF0Y2g8L3NwYW4+KDxzcGFuIGNsYXNzPSJydWJ5LWlkZW50aWZpZXIiPmNvbW1hbmQ8L3NwYW4+KSA8c3BhbiBjbGFzcz0icnVieS1rZXl3b3JkIGt3Ij5lbmQ8L3NwYW4+CjwvcHJlPgogICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICAgIDwvZGl2PgoKICAgICAgPGRpdiBpZD0ibWV0aG9kLU0wMDAzMzIiIGNsYXNzPSJtZXRob2QtZGV0YWlsIj4KICAgICAgICA8YSBuYW1lPSJNMDAwMzMyIj48L2E+CgogICAgICAgIDxkaXYgY2xhc3M9Im1ldGhvZC1oZWFkaW5nIj4KICAgICAgICAgIDxhIGhyZWY9IiNNMDAwMzMyIiBjbGFzcz0ibWV0aG9kLXNpZ25hdHVyZSI+CiAgICAgICAgICA8c3BhbiBjbGFzcz0ibWV0aG9kLW5hbWUiPndoaWNoITwvc3Bhbj48c3BhbiBjbGFzcz0ibWV0aG9kLWFyZ3MiPihjb21tYW5kKTwvc3Bhbj4KICAgICAgICAgIDwvYT4KICAgICAgICA8L2Rpdj4KICAgICAgCiAgICAgICAgPGRpdiBjbGFzcz0ibWV0aG9kLWRlc2NyaXB0aW9uIj4KICAgICAgICAgIDxwPgpTYW1lIGFzIDxhIGhyZWY9IlNoZWxsTWFuYWdlci5odG1sI00wMDAzMzEiPndoaWNoPC9hPiBidXQgdGhyb3dzIGFuCkFyZ3VtZW50RXJyb3IgaWYgY29tbWFuZCBpc24mIzgyMTY7dCBmb3VuZC4KPC9wPgogICAgICAgICAgPHA+PGEgY2xhc3M9InNvdXJjZS10b2dnbGUiIGhyZWY9IiMiCiAgICAgICAgICAgIG9uY2xpY2s9InRvZ2dsZUNvZGUoJ00wMDAzMzItc291cmNlJyk7cmV0dXJuIGZhbHNlOyI+W1NvdXJjZV08L2E+PC9wPgogICAgICAgICAgPGRpdiBjbGFzcz0ibWV0aG9kLXNvdXJjZS1jb2RlIiBpZD0iTTAwMDMzMi1zb3VyY2UiPgo8cHJlPgo8c3BhbiBjbGFzcz0icnVieS1jb21tZW50IGNtdCI+IyBGaWxlIGxpYi9hdXRvbWF0ZWl0L3NoZWxsX21hbmFnZXIucmIsIGxpbmUgNjM8L3NwYW4+CiAgPHNwYW4gY2xhc3M9InJ1Ynkta2V5d29yZCBrdyI+ZGVmPC9zcGFuPiA8c3BhbiBjbGFzcz0icnVieS1pZGVudGlmaWVyIj53aGljaCE8L3NwYW4+KDxzcGFuIGNsYXNzPSJydWJ5LWlkZW50aWZpZXIiPmNvbW1hbmQ8L3NwYW4+KSA8c3BhbiBjbGFzcz0icnVieS1pZGVudGlmaWVyIj5kaXNwYXRjaDwvc3Bhbj4oPHNwYW4gY2xhc3M9InJ1YnktaWRlbnRpZmllciI+Y29tbWFuZDwvc3Bhbj4pIDxzcGFuIGNsYXNzPSJydWJ5LWtleXdvcmQga3ciPmVuZDwvc3Bhbj4KPC9wcmU+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgICAgPC9kaXY+CgoKICAgIDwvZGl2PgoKCiAgPC9kaXY+CgoKPGRpdiBpZD0idmFsaWRhdG9yLWJhZGdlcyI+CiAgPHA+PHNtYWxsPjxhIGhyZWY9Imh0dHA6Ly92YWxpZGF0b3IudzMub3JnL2NoZWNrL3JlZmVyZXIiPltWYWxpZGF0ZV08L2E+PC9zbWFsbD48L3A+CjwvZGl2PgoKPC9ib2R5Pgo8L2h0bWw+", "http-headers": {"Content-Type": "text/html; charset=utf-8", "Server": "GitHub.com", "Last-Modified": "Tue, 08 Jan 2019 16:27:40 GMT", "ETag": "\"5c34cf7c-cabc\"", "Access-Control-Allow-Origin": "*", "Expires": "Mon, 01 Jul 2019 12:45:32 GMT", "Cache-Control": "max-age=600", "X-Proxy-Cache": "MISS", "X-GitHub-Request-Id": "33DA:029E:103C9B:153382:5D19FE14", "Content-Length": "51900", "Accept-Ranges": "bytes", "Date": "Mon, 01 Jul 2019 12:35:33 GMT", "Via": "1.1 varnish", "Age": "0", "Connection": "close", "X-Served-By": "cache-hhn4067-HHN", "X-Cache": "MISS", "X-Cache-Hits": "0", "X-Timer": "S1561984533.910378,VS0,VE120", "Vary": "Accept-Encoding", "X-Fastly-Request-ID": "cd402967a0f9a8bd682b623f1f9132319e08032a"}, "id": "urn:uuid:00144f2e-4237-4e10-b9c5-94dd32bd603a", "warc-record-size": 52540, "timestamp": "2019-07-01T12:35:32Z", "digest": "sha1:ILROIZHOIRDXLTMZRUVDI3G3CUTSLO34", "warc-offset": 396107343, "warc-filename": "hdfs://un532p03-kky.fav:9000/Test-2019-06-30-cc-naki-crawler00-20190701123430248-00036-12296~crawler00.webarchiv.cz~7778.warc.gz", "language": "en", "title": "Class: AutomateIt::ShellManager", "headlines": ["Methods", "Public Instance methods"], "links": ["../../files/lib/automateit/shell_manager_rb.html", "Plugin/Manager.html", "ShellManager.html", "ShellManager.html", "../../files/docs/previews_txt.html", "#M000329", "#M000338", "#M000354", "#M000355", "#M000356", "#M000357", "#M000336", "#M000346", "#M000348", "#M000347", "#M000353", "#M000343", "#M000344", "#M000345", "#M000340", "#M000341", "#M000333", "#M000334", "#M000335", "#M000349", "#M000328", "#M000325", "#M000326", "#M000327", "#M000339", "#M000350", "#M000351", "#M000352", "#M000342", "#M000330", "#M000358", "#M000337", "#M000331", "#M000332", "#M000329", "ShellManager.html#M000329", "ShellManager.html#M000329", "ShellManager.html#M000329", "ShellManager.html#M000329", "ShellManager.html#M000329", "#", "#M000338", "../../files/docs/previews_txt.html", "#", "#M000354", "#", "#M000355", "#", "#M000356", "#", "#M000357", "#", "#M000336", "ShellManager.html#M000354", "ShellManager.html#M000356", "ShellManager.html#M000331", "#", "#M000346", "#", "#M000348", "#", "#M000347", "#", "#M000353", "#", "#M000343", "#", "#M000344", "#", "#M000345", "#", "#M000340", "ShellManager.html#M000340", "ShellManager.html#M000336", "../../files/docs/previews_txt.html", "#", "#M000341", "ShellManager.html#M000340", "../../files/docs/previews_txt.html", "#", "#M000333", "ShellManager.html#M000331", "#", "#M000334", "ShellManager.html#M000333", "ShellManager.html", "#", "#M000335", "ShellManager.html#M000334", "ShellManager.html#M000338", "#", "#M000349", "#", "#M000328", "#", "#M000325", "#", "#M000326", "#", "#M000327", "#", "#M000339", "#", "#M000350", "#", "#M000351", "#", "#M000352", "#", "#M000342", "#", "#M000330", "#", "#M000358", "ShellManager.html", "#", "#M000337", "ShellManager.html#M000337", "ShellManager.html#M000337", "#", "#M000331", "#", "#M000332", "ShellManager.html#M000331", "#", "http://validator.w3.org/check/referer"], "plain-text": "Backup sources if they exist. Returns the names of the backups created.\nOptions:\n:quiet \u2014 Don\u2018t display output? Default is false.\nThese backups are copies of the original sources saved into the same directories as the originals. The pathnames of these copies are timestamped and guaranteed to be unique, so you can have multiple backups of the same sources.\nWARNING: This method is not conditional. It will make a backup every time it\u2018s called if the sources exist. Therefore, only execute this method when its needed.\nIn the above example, the backup\u2018s name contains two special strings. The \"1190994237\" is the time the backup was made in seconds since the Epoch. The \"M2xhLrC6Sj\" is a random string used to guarantee the uniqueness of this backup in case two are made at exactly the same time.\nChanges the directory into the specified dir. If called with a block, changes to the directory for the duration of the block, and then changes back to the previous directory at the end.\nWARNING: Previewing code can be dangerous. Read previews.txt for instructions on how to write code that can be safely previewed.\nChange the user and group ownership of the targets. You can leave either the user or group as nil if you don\u2018t want to change it. Returns an array of targets modified or false if all have the desired ownership.\nChange the user and group ownership of the targets recursively. You can leave either the user or group as nil if you don\u2018t want to change it. Returns an array of targets modified or false if all have the desired ownership.\n:recursive \u2014 Change files and directories recursively. Defaults to false.\n:user \u2014 User name to change ownership to.\n:group \u2014 Group name to change ownership to.\n:mode \u2014 Mode to use as octal, e.g., 0400 to make a file readable only to its owner.\n:details \u2014 Reports the files modified, rather than the arguments modified. An argument might be a single directory, but this may result in modifications to many files within that directory. Use :details for situations when there\u2018s a need to see all files actually changed. The reason :details is off by default is that it will flood the screen with a list of all files modified in a large directory, which is overwhelming and probably unnecessary unless you actually need to see these details. Defaults to false.\nCopy the sources to the target. Returns an array of sources copied or false if all are present.\nOptions:\n:preserve \u2014 Preserve file modification time and ownership. Defaults to false. Can be true, false, or :try. If :try, the properties will be preserved if possible on the platform, whereas true will raise an exception if not available.\nCreate a hard link between the source and target. Your platform must support hard links to use this. Returns the target created or false if the link is already present.\nCreate a symbolic link between the sources and target. Your platform must support symbolic links to use this. Returns an array of sources linked or false if all are already present.\nCreate a symbolic link between the sources and target. If the target already exists, will remove it and recreate it. Your platform must support symbolic links to use this. Returns an array of sources linked or false if all are already present.\nCreate a directory or directories with their parents. Returns an array of directories created or false if all directories are already present.\nCreates a temporary file. Optionally takes a name argument which is purely cosmetic, e.g., if the name is \"foo\", the routine may create a temporary file named /tmp/foo_qeKo7nJk1s.\nWhen called with a block, invokes the block with the path of the temporary file and deletes the file at the end of the block.\nWithout a block, returns the path of the temporary file and you\u2018re responsible for removing it when done.\nCreates a temporary directory. See mktemp for details on the name argument.\nWhen called with a block, invokes the block with the path of the temporary directory and recursively deletes the directory and its contents at the end of the block.\nWithout a block, returns the path of the temporary directory and you\u2018re responsible for removing it when done.\nCAUTION: Read notes at the top of ShellManager for potentially problematic situations that may be encountered if using this command in preview mode!\nRemove a directory or directories. The directories must be empty or an exception is thrown. Returns the directories removed or false if none of the directories exist.\nCreate the targets as files if needed and update their modification time. Unlike most other commands provided by ShellManager, this one will always modify the targets. Returns an array of targets modified.\nOptions:\n:like \u2014 Touch the targets like this file. Defaults to none.\n:stamp \u2014 Set the targets to the specified timestamp. Defaults to Time.now.\nSet the umask to mode. If given a block, changes the umask only for the duration of the block and changes it back to its previous setting at the end.", "plain-text-tokens": ["Backup", "sources", "if", "they", "exist", ".", "Returns", "the", "names", "of", "the", "backups", "created", ".", "Options", ":", ":", "quiet", "\u2014", "Don", "\u2018", "t", "display", "output", "?", "Default", "is", "false", ".", "These", "backups", "are", "copies", "of", "the", "original", "sources", "saved", "into", "the", "same", "directories", "as", "the", "originals", ".", "The", "pathnames", "of", "these", "copies", "are", "timestamped", "and", "guaranteed", "to", "be", "unique", ",", "so", "you", "can", "have", "multiple", "backups", "of", "the", "same", "sources", ".", "WARNING", ":", "This", "method", "is", "not", "conditional", ".", "It", "will", "make", "a", "backup", "every", "time", "it", "\u2018", "s", "called", "if", "the", "sources", "exist", ".", "Therefore", ",", "only", "execute", "this", "method", "when", "its", "needed", ".", "In", "the", "above", "example", ",", "the", "backup", "\u2018", "s", "name", "contains", "two", "special", "strings", ".", "The", "``", "1190994237", "''", "is", "the", "time", "the", "backup", "was", "made", "in", "seconds", "since", "the", "Epoch", ".", "The", "``", "M2xhLrC6Sj", "''", "is", "a", "random", "string", "used", "to", "guarantee", "the", "uniqueness", "of", "this", "backup", "in", "case", "two", "are", "made", "at", "exactly", "the", "same", "time", ".", "Changes", "the", "directory", "into", "the", "specified", "dir", ".", "If", "called", "with", "a", "block", ",", "changes", "to", "the", "directory", "for", "the", "duration", "of", "the", "block", ",", "and", "then", "changes", "back", "to", "the", "previous", "directory", "at", "the", "end", ".", "WARNING", ":", "Previewing", "code", "can", "be", "dangerous", ".", "Read", "previews.txt", "for", "instructions", "on", "how", "to", "write", "code", "that", "can", "be", "safely", "previewed", ".", "Change", "the", "user", "and", "group", "ownership", "of", "the", "targets", ".", "You", "can", "leave", "either", "the", "user", "or", "group", "as", "nil", "if", "you", "don", "\u2018", "t", "want", "to", "change", "it", ".", "Returns", "an", "array", "of", "targets", "modified", "or", "false", "if", "all", "have", "the", "desired", "ownership", ".", "Change", "the", "user", "and", "group", "ownership", "of", "the", "targets", "recursively", ".", "You", "can", "leave", "either", "the", "user", "or", "group", "as", "nil", "if", "you", "don", "\u2018", "t", "want", "to", "change", "it", ".", "Returns", "an", "array", "of", "targets", "modified", "or", "false", "if", "all", "have", "the", "desired", "ownership", ".", ":", "recursive", "\u2014", "Change", "files", "and", "directories", "recursively", ".", "Defaults", "to", "false", ".", ":", "user", "\u2014", "User", "name", "to", "change", "ownership", "to", ".", ":", "group", "\u2014", "Group", "name", "to", "change", "ownership", "to", ".", ":", "mode", "\u2014", "Mode", "to", "use", "as", "octal", ",", "e.g.", ",", "0400", "to", "make", "a", "file", "readable", "only", "to", "its", "owner", ".", ":", "details", "\u2014", "Reports", "the", "files", "modified", ",", "rather", "than", "the", "arguments", "modified", ".", "An", "argument", "might", "be", "a", "single", "directory", ",", "but", "this", "may", "result", "in", "modifications", "to", "many", "files", "within", "that", "directory", ".", "Use", ":", "details", "for", "situations", "when", "there", "\u2018", "s", "a", "need", "to", "see", "all", "files", "actually", "changed", ".", "The", "reason", ":", "details", "is", "off", "by", "default", "is", "that", "it", "will", "flood", "the", "screen", "with", "a", "list", "of", "all", "files", "modified", "in", "a", "large", "directory", ",", "which", "is", "overwhelming", "and", "probably", "unnecessary", "unless", "you", "actually", "need", "to", "see", "these", "details", ".", "Defaults", "to", "false", ".", "Copy", "the", "sources", "to", "the", "target", ".", "Returns", "an", "array", "of", "sources", "copied", "or", "false", "if", "all", "are", "present", ".", "Options", ":", ":", "preserve", "\u2014", "Preserve", "file", "modification", "time", "and", "ownership", ".", "Defaults", "to", "false", ".", "Can", "be", "true", ",", "false", ",", "or", ":", "try", ".", "If", ":", "try", ",", "the", "properties", "will", "be", "preserved", "if", "possible", "on", "the", "platform", ",", "whereas", "true", "will", "raise", "an", "exception", "if", "not", "available", ".", "Create", "a", "hard", "link", "between", "the", "source", "and", "target", ".", "Your", "platform", "must", "support", "hard", "links", "to", "use", "this", ".", "Returns", "the", "target", "created", "or", "false", "if", "the", "link", "is", "already", "present", ".", "Create", "a", "symbolic", "link", "between", "the", "sources", "and", "target", ".", "Your", "platform", "must", "support", "symbolic", "links", "to", "use", "this", ".", "Returns", "an", "array", "of", "sources", "linked", "or", "false", "if", "all", "are", "already", "present", ".", "Create", "a", "symbolic", "link", "between", "the", "sources", "and", "target", ".", "If", "the", "target", "already", "exists", ",", "will", "remove", "it", "and", "recreate", "it", ".", "Your", "platform", "must", "support", "symbolic", "links", "to", "use", "this", ".", "Returns", "an", "array", "of", "sources", "linked", "or", "false", "if", "all", "are", "already", "present", ".", "Create", "a", "directory", "or", "directories", "with", "their", "parents", ".", "Returns", "an", "array", "of", "directories", "created", "or", "false", "if", "all", "directories", "are", "already", "present", ".", "Creates", "a", "temporary", "file", ".", "Optionally", "takes", "a", "name", "argument", "which", "is", "purely", "cosmetic", ",", "e.g.", ",", "if", "the", "name", "is", "``", "foo", "''", ",", "the", "routine", "may", "create", "a", "temporary", "file", "named", "/tmp/foo_qeKo7nJk1s", ".", "When", "called", "with", "a", "block", ",", "invokes", "the", "block", "with", "the", "path", "of", "the", "temporary", "file", "and", "deletes", "the", "file", "at", "the", "end", "of", "the", "block", ".", "Without", "a", "block", ",", "returns", "the", "path", "of", "the", "temporary", "file", "and", "you", "\u2018", "re", "responsible", "for", "removing", "it", "when", "done", ".", "Creates", "a", "temporary", "directory", ".", "See", "mktemp", "for", "details", "on", "the", "name", "argument", ".", "When", "called", "with", "a", "block", ",", "invokes", "the", "block", "with", "the", "path", "of", "the", "temporary", "directory", "and", "recursively", "deletes", "the", "directory", "and", "its", "contents", "at", "the", "end", "of", "the", "block", ".", "Without", "a", "block", ",", "returns", "the", "path", "of", "the", "temporary", "directory", "and", "you", "\u2018", "re", "responsible", "for", "removing", "it", "when", "done", ".", "CAUTION", ":", "Read", "notes", "at", "the", "top", "of", "ShellManager", "for", "potentially", "problematic", "situations", "that", "may", "be", "encountered", "if", "using", "this", "command", "in", "preview", "mode", "!", "Remove", "a", "directory", "or", "directories", ".", "The", "directories", "must", "be", "empty", "or", "an", "exception", "is", "thrown", ".", "Returns", "the", "directories", "removed", "or", "false", "if", "none", "of", "the", "directories", "exist", ".", "Create", "the", "targets", "as", "files", "if", "needed", "and", "update", "their", "modification", "time", ".", "Unlike", "most", "other", "commands", "provided", "by", "ShellManager", ",", "this", "one", "will", "always", "modify", "the", "targets", ".", "Returns", "an", "array", "of", "targets", "modified", ".", "Options", ":", ":", "like", "\u2014", "Touch", "the", "targets", "like", "this", "file", ".", "Defaults", "to", "none", ".", ":", "stamp", "\u2014", "Set", "the", "targets", "to", "the", "specified", "timestamp", ".", "Defaults", "to", "Time.now", ".", "Set", "the", "umask", "to", "mode", ".", "If", "given", "a", "block", ",", "changes", "the", "umask", "only", "for", "the", "duration", "of", "the", "block", "and", "changes", "it", "back", "to", "its", "previous", "setting", "at", "the", "end", "."]}